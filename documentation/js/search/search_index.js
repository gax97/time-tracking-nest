var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.078,1,1.949]],["body/controllers/AppController.html",[0,1.88,1,3.397,2,1.736,3,0.434,4,0.434,5,0.369,6,3.751,7,0.434,8,0.034,9,0.73,10,0.434,11,0.15,12,0.025,13,0.03,14,0.025]],["title/modules/AppModule.html",[15,1.181,16,1.949]],["body/modules/AppModule.html",[1,3.011,2,1.602,3,0.293,4,0.293,5,0.249,7,0.553,8,0.036,9,0.493,10,0.293,11,0.101,12,0.017,13,0.023,14,0.017,15,1.825,16,3.806,17,1.413,18,1.413,19,1.729,20,1.729,21,1.413,22,2.693,23,1.729,24,2.533,25,2.533,26,2.533,27,3.128,28,3.128,29,2.82,30,3.128,31,2.364,32,1.729,33,1.413,34,3.054,35,2.643,36,3.054,37,3.054,38,3.054,39,1.934,40,1.286,41,3.054,42,3.054,43,1.729,44,3.054,45,3.054,46,3.054]],["title/injectables/AppService.html",[30,1.742,47,0.985]],["body/injectables/AppService.html",[3,0.434,4,0.434,5,0.369,7,0.434,8,0.034,9,0.73,10,0.434,11,0.15,12,0.025,13,0.03,14,0.025,30,3.038,47,1.717,48,2.309,49,3.751]],["title/controllers/AuthController.html",[0,1.078,50,1.742]],["body/controllers/AuthController.html",[0,0.726,2,0.795,3,0.199,4,0.199,5,0.169,7,0.483,8,0.035,9,0.334,10,0.199,11,0.127,12,0.012,13,0.018,14,0.012,33,1.459,50,1.785,51,1.486,52,1.486,53,2.072,54,0.334,55,0.84,56,2.455,57,3.153,58,3.153,59,3.153,60,2.072,61,2.906,62,3.182,63,3.004,64,1.766,65,3.538,66,0.687,67,2.072,68,0.926,69,0.926,70,0.616,71,0.926,72,2.737,73,1.017,74,2.072,75,2.615,76,2.072,77,2.072,78,3.182,79,2.615,80,2.072,81,1.312,82,1.719,83,1.719,84,1.719,85,1.486,86,1.719,87,1.21,88,1.312,89,1.607,90,1.486,91,2.615,92,3.807,93,1.719,94,1.486,95,1.486,96,1.312,97,1.173,98,1.312,99,1.719,100,1.058,101,1.997,102,1.495,103,3.059,104,1.719,105,1.486,106,1.997,107,2.599,108,1.719,109,1.719,110,1.486,111,1.486,112,1.486,113,2.417,114,1.719,115,1.312,116,2.261,117,1.486,118,0.872,119,1.719,120,2.237,121,1.719,122,2.615,123,2.906,124,1.719,125,1.719,126,1.785,127,1.637,128,1.719,129,1.719,130,0.765,131,1.719,132,1.719,133,1.719,134,1.486,135,1.719,136,1.719,137,1.486,138,0.726,139,1.486,140,0.872,141,1.719,142,1.719,143,1.719,144,1.719,145,0.959,146,1.719,147,1.719,148,1.719,149,1.719,150,1.719]],["title/modules/AuthModule.html",[15,1.181,27,1.742]],["body/modules/AuthModule.html",[2,1.546,3,0.279,4,0.279,5,0.236,7,0.555,8,0.035,9,0.468,10,0.279,11,0.096,12,0.016,13,0.023,14,0.016,15,1.776,17,1.342,18,1.342,19,1.642,20,1.642,21,1.342,22,2.621,23,1.642,27,3.22,31,2.281,32,1.642,33,1.864,35,1.837,39,1.837,40,1.221,50,2.621,55,0.773,66,0.522,68,0.704,69,0.704,70,0.468,71,0.704,73,0.773,87,2.087,88,1.837,89,2.289,90,2.08,130,0.704,151,2.406,152,2.406,153,2.9,154,2.406,155,3.341,156,4.147,157,2.9,158,3.341,159,1.642,160,3.341,161,2.406,162,2.9,163,2.056,164,2.406,165,1.837,166,2.406,167,1.642,168,2.281,169,2.406,170,2.406,171,1.642,172,2.9,173,2.9,174,2.9,175,2.9]],["title/injectables/AuthService.html",[47,0.985,89,1.295]],["body/injectables/AuthService.html",[3,0.274,4,0.274,5,0.233,7,0.502,8,0.035,9,0.461,10,0.274,11,0.095,12,0.016,13,0.022,14,0.016,40,1.202,47,1.275,48,1.458,54,0.461,55,1.062,56,2.504,66,0.826,68,1.114,69,1.114,70,0.643,71,1.114,73,1.062,89,1.677,102,1.896,113,2.523,118,1.932,120,1.321,123,1.808,130,0.967,138,1.396,163,2.034,164,2.368,167,1.617,168,2.256,169,2.368,176,2.368,177,3.984,178,3.984,179,2.256,180,2.368,181,4.589,182,4.589,183,2.855,184,3.305,185,3.984,186,2.855,187,4.119,188,3.984,189,2.855,190,3.984,191,2.048,192,2.368,193,2.906,194,2.855,195,2.855,196,2.855,197,1.458,198,3.984,199,2.855,200,2.368]],["title/classes/BaseService.html",[11,0.102,201,1.742]],["body/classes/BaseService.html",[3,0.339,4,0.339,5,0.288,7,0.339,8,0.035,10,0.339,11,0.117,12,0.02,13,0.026,14,0.02,54,0.57,55,1.226,56,2.367,66,0.92,68,1.117,69,1.117,70,0.742,71,1.117,73,0.942,118,2.154,138,1.238,145,1.635,179,2.001,201,2.605,202,1.238,203,2.931,204,1.937,205,2.365,206,3.3,207,4.601,208,4.131,209,4.601,210,3.3,211,3.534,212,1.635,213,1.635,214,3.534,215,3.534]],["title/classes/ConfigService.html",[11,0.102,43,1.742]],["body/classes/ConfigService.html",[3,0.217,4,0.217,5,0.184,7,0.217,8,0.035,10,0.217,11,0.075,12,0.013,13,0.019,14,0.013,43,2.523,54,0.365,55,0.897,66,0.899,68,0.976,69,0.976,70,0.769,71,0.976,73,1.27,102,1.967,107,1.28,115,1.431,118,1.693,120,1.861,126,1.28,127,1.292,138,1.67,140,2.103,179,1.28,193,1.431,202,0.792,216,1.621,217,4.714,218,3.336,219,4.456,220,4.456,221,3.366,222,4.456,223,2.26,224,3.366,225,2.26,226,3.366,227,3.366,228,2.26,229,2.26,230,2.26,231,2.26,232,4.022,233,3.366,234,4.456,235,2.26,236,1.875,237,3.196,238,2.26,239,2.26,240,1.875,241,2.26,242,2.26,243,2.26,244,2.26,245,1.906,246,2.26,247,2.26,248,2.26,249,2.26,250,2.26,251,2.26,252,2.26,253,2.26,254,2.792,255,2.26,256,1.28,257,2.26,258,2.26,259,2.26,260,1.621,261,2.26,262,2.26,263,2.26,264,2.26,265,2.26,266,2.26,267,2.26,268,2.26,269,2.26,270,2.26,271,2.26,272,2.26,273,1.875,274,1.875,275,1.875,276,1.875,277,1.875,278,1.875,279,1.875,280,1.875]],["title/classes/HttpExceptionFilter.html",[11,0.102,281,2.207]],["body/classes/HttpExceptionFilter.html",[3,0.315,4,0.315,5,0.268,7,0.421,8,0.035,9,0.53,10,0.315,11,0.109,12,0.018,13,0.025,14,0.018,54,0.53,55,1.168,61,3.124,63,2.981,66,0.591,68,0.797,69,0.797,70,0.53,71,0.797,73,0.875,100,1.676,106,2.079,120,2.436,127,1.26,159,1.859,171,2.482,202,1.15,260,3.538,281,3.143,282,2.723,283,4.092,284,4.092,285,3.635,286,5.264,287,4.367,288,3.282,289,2.723,290,3.282,291,2.723,292,2.723,293,2.723,294,2.723,295,4.382,296,3.282,297,3.282,298,3.282,299,2.723,300,2.354,301,2.723,302,2.723,303,2.723,304,2.723,305,2.723,306,2.723,307,2.723]],["title/classes/OAuthAccessToken.html",[11,0.102,168,1.742]],["body/classes/OAuthAccessToken.html",[3,0.248,4,0.248,5,0.211,7,0.417,8,0.035,10,0.248,11,0.086,12,0.014,13,0.021,14,0.014,54,0.766,64,2.554,66,0.993,70,0.942,102,1.934,113,2.751,130,1.34,163,2.818,168,2.102,200,3.603,202,0.905,204,1.562,205,1.829,212,1.195,213,1.195,245,2.102,308,2.143,309,1.895,310,4.344,311,4.344,312,4.344,313,2.751,314,3.007,315,3.712,316,2.583,317,3.406,318,2.583,319,3.079,320,2.583,321,3.079,322,2.583,323,2.583,324,2.583,325,2.583,326,2.583,327,3.185,328,1.636,329,2.102,330,3.603,331,3.603,332,2.143,333,2.583,334,2.662,335,3.079]],["title/classes/OAuthClient.html",[11,0.102,163,1.571]],["body/classes/OAuthClient.html",[3,0.27,4,0.27,5,0.229,7,0.379,8,0.035,10,0.27,11,0.093,12,0.016,13,0.022,14,0.016,54,0.454,64,2.404,66,0.935,70,0.925,102,1.887,140,2.077,163,2.012,197,2.324,202,0.985,204,1.659,205,1.916,212,2.106,213,1.301,217,3.775,245,3.131,309,2.012,314,3.124,317,3.538,327,3.289,328,1.781,329,2.232,334,2.827,336,2.332,337,4.552,338,4.552,339,4.552,340,4.552,341,3.862,342,2.812,343,3.942,344,2.812,345,2.812,346,2.827,347,3.942,348,2.812,349,3.942,350,2.812,351,2.827,352,2.812,353,2.812,354,2.812,355,2.812,356,2.812]],["title/classes/OAuthErrorFilter.html",[11,0.102,357,2.207]],["body/classes/OAuthErrorFilter.html",[3,0.315,4,0.315,5,0.268,7,0.474,8,0.035,9,0.53,10,0.315,11,0.109,12,0.018,13,0.025,14,0.018,54,0.53,55,1.168,61,3.124,63,2.981,66,0.591,68,0.797,69,0.797,70,0.53,71,0.797,73,0.875,96,2.079,97,1.859,100,1.676,106,2.079,120,2.283,127,1.26,159,1.859,171,2.482,202,1.15,260,3.538,283,4.092,284,4.092,285,3.635,287,4.367,289,2.723,291,2.723,292,2.723,293,2.723,294,2.723,299,2.723,300,2.354,301,2.723,302,2.723,303,2.723,304,2.723,305,2.723,306,2.723,307,2.723,357,3.143,358,2.723,359,5.264,360,3.282,361,3.282,362,3.282,363,3.282]],["title/injectables/ResponseFormatInterceptor.html",[47,0.985,364,2.207]],["body/injectables/ResponseFormatInterceptor.html",[3,0.331,4,0.331,5,0.281,7,0.485,8,0.035,9,0.555,10,0.331,11,0.114,12,0.019,13,0.025,14,0.019,47,1.447,48,1.757,54,0.555,55,1.205,66,0.619,68,0.835,69,0.835,70,0.555,71,0.835,73,0.917,138,1.585,145,2.093,171,1.949,300,2.468,364,3.243,365,2.855,366,4.522,367,4.522,368,5.364,369,4.449,370,5.364,371,3.442,372,3.442,373,5.05,374,4.522,375,2.855,376,3.442,377,3.442,378,3.442,379,3.442,380,3.442,381,3.442,382,3.442,383,3.442]],["title/classes/SignUpParameters.html",[11,0.102,78,1.949]],["body/classes/SignUpParameters.html",[0,0.762,3,0.209,4,0.209,5,0.177,7,0.491,8,0.035,9,0.351,10,0.209,11,0.13,12,0.012,13,0.018,14,0.012,33,1.006,50,1.232,51,1.56,54,0.351,56,1.819,61,2.489,62,2.768,63,2.654,64,2.023,65,2.713,66,0.787,70,0.705,72,2.345,75,1.804,78,2.968,79,1.804,81,1.377,82,1.804,83,1.804,84,1.804,85,1.56,86,1.804,87,1.255,88,1.377,89,1.655,90,1.56,91,2.713,92,4.238,93,1.804,94,1.56,95,1.56,96,1.377,97,1.232,98,1.377,99,1.804,100,1.11,101,2.768,102,1.842,103,3.531,104,1.804,105,2.345,106,2.489,107,2.977,108,2.713,109,2.713,110,2.345,111,2.345,112,2.345,113,2.968,114,1.804,115,1.377,116,2.345,117,1.56,118,0.916,119,1.804,120,2.279,121,1.804,122,2.713,123,2.968,124,1.804,125,1.804,126,1.852,127,1.678,128,1.804,129,1.804,130,0.794,131,1.804,132,1.804,133,1.804,134,1.56,135,1.804,136,1.804,137,1.56,138,0.762,139,1.56,140,0.916,141,1.804,142,1.804,143,1.804,144,1.804,145,1.006,146,1.804,147,1.804,148,1.804,149,1.804,150,1.804,202,0.762,204,1.377,384,2.175,385,2.175,386,2.175,387,2.175,388,2.175,389,2.175]],["title/classes/Time.html",[11,0.102,390,1.295]],["body/classes/Time.html",[3,0.26,4,0.26,5,0.22,7,0.428,8,0.035,10,0.26,11,0.09,12,0.015,13,0.022,14,0.015,54,0.436,64,2.461,66,0.957,70,0.917,102,1.863,130,1.356,140,2.041,197,2.275,202,0.948,204,1.615,205,1.876,212,2.062,213,1.251,245,2.899,256,2.172,309,1.958,313,2.822,314,2.822,317,3.477,319,2.243,321,2.243,327,3.367,328,1.713,329,2.172,330,3.181,331,3.181,332,2.243,335,3.181,341,3.477,346,2.75,351,1.94,390,1.615,391,2.243,392,2.822,393,3.696,394,3.196,395,4.022,396,2.704,397,2.704,398,2.704,399,2.704,400,2.704,401,2.704,402,2.243,403,1.94]],["title/controllers/TimeController.html",[0,1.078,404,1.949]],["body/controllers/TimeController.html",[0,0.648,2,0.709,3,0.177,4,0.177,5,0.151,7,0.418,8,0.035,9,0.298,10,0.177,11,0.061,12,0.01,13,0.016,14,0.01,52,1.325,54,0.298,55,0.769,56,2.373,62,3.247,63,3.026,64,1.644,66,0.639,68,0.862,69,1.057,70,0.573,71,0.862,73,0.947,81,1.17,85,1.325,87,1.108,88,1.17,100,0.943,102,1.618,115,1.17,116,2.07,117,1.325,118,0.778,120,2.309,123,2.923,126,1.634,127,1.108,130,1.245,134,1.325,138,1.011,139,1.325,140,1.215,145,0.855,197,1.813,313,1.17,390,1.69,392,1.828,393,4,394,2.547,404,1.828,405,1.533,406,2.886,407,2.886,408,2.886,409,1.848,410,4.015,411,2.886,412,1.848,413,2.394,414,4.015,415,5.128,416,2.886,417,2.946,418,4.015,419,4.015,420,4.015,421,4.015,422,1.848,423,2.886,424,1.848,425,4.015,426,4.355,427,1.848,428,1.848,429,2.886,430,2.886,431,2.886,432,4.355,433,1.474,434,1.533,435,1.533,436,1.848,437,1.848,438,1.848,439,1.848,440,1.848,441,1.848,442,1.848,443,1.848,444,1.848,445,2.886,446,2.886,447,2.886,448,1.848,449,1.848,450,1.533,451,1.848,452,1.848,453,1.848,454,1.848,455,1.848,456,1.848,457,1.848,458,1.848,459,1.848,460,1.848,461,1.848,462,1.848,463,2.886,464,1.848,465,1.848]],["title/modules/TimeModule.html",[15,1.181,28,1.742]],["body/modules/TimeModule.html",[2,1.577,3,0.287,4,0.287,5,0.243,7,0.55,8,0.035,9,0.482,10,0.287,11,0.099,12,0.017,13,0.023,14,0.017,15,1.804,17,1.381,18,1.381,19,1.69,20,1.69,21,1.381,22,2.661,23,1.69,28,3.243,29,2.801,31,2.327,32,1.69,33,1.381,35,2.602,39,1.89,40,1.256,55,0.796,66,0.537,68,0.724,69,0.724,70,0.482,71,0.724,73,0.796,130,0.724,154,2.476,155,3.408,156,4.199,158,3.408,159,1.69,160,3.408,161,2.476,165,1.89,166,2.476,167,1.69,171,1.69,390,1.256,404,2.975,433,2.801,434,2.476,466,2.476,467,2.985,468,2.476,469,2.985,470,2.985,471,2.985,472,2.985,473,2.141,474,2.985,475,2.985]],["title/injectables/TimeService.html",[47,0.985,433,1.571]],["body/injectables/TimeService.html",[3,0.245,4,0.245,5,0.208,7,0.481,8,0.036,9,0.412,10,0.245,11,0.085,12,0.014,13,0.021,14,0.014,40,1.075,47,1.178,48,1.304,54,0.412,55,0.981,56,2.667,66,0.939,68,1.215,69,1.215,70,0.412,71,1.215,73,1.259,118,1.817,138,1.513,145,1.704,179,2.085,191,1.832,193,1.618,197,2.204,201,2.836,204,1.55,205,1.55,206,3.388,208,1.832,210,3.096,212,1.704,309,1.88,313,2.734,390,1.55,392,1.618,394,1.832,403,1.832,433,1.88,473,1.832,476,2.119,477,3.682,478,3.682,479,2.555,480,2.555,481,3.682,482,2.555,483,3.682,484,2.555,485,3.682,486,2.555,487,3.054,488,2.119,489,2.119,490,2.119,491,2.555,492,2.555,493,2.555,494,2.555,495,2.555,496,2.555,497,2.555,498,2.555]],["title/classes/User.html",[11,0.102,130,0.747]],["body/classes/User.html",[3,0.216,4,0.216,5,0.183,7,0.457,8,0.035,9,0.363,10,0.216,11,0.075,12,0.013,13,0.019,14,0.013,54,0.363,55,0.894,64,2.2,66,0.929,68,0.814,69,0.814,70,0.916,71,0.814,73,0.894,81,1.424,101,2.54,102,1.99,103,2.876,105,2.876,107,2.271,110,2.405,111,1.613,112,1.613,126,1.274,127,0.863,130,0.814,137,2.405,138,0.788,140,1.412,159,1.274,197,2.047,202,0.788,204,1.412,205,1.688,212,1.856,213,1.041,237,1.613,240,3.687,245,2.824,256,2.517,309,1.712,314,2.815,327,3.158,328,1.424,329,1.899,334,2.876,341,2.405,346,2.405,351,1.613,390,1.871,395,3.687,402,1.866,499,1.866,500,4.01,501,3.354,502,3.354,503,2.249,504,4.01,505,2.249,506,2.249,507,2.249,508,2.249,509,2.249,510,3.354,511,2.249,512,2.249,513,2.249,514,2.249,515,3.354,516,2.782,517,2.249,518,3.354,519,2.249,520,2.249,521,2.249,522,2.249,523,2.249,524,2.249,525,2.249,526,2.249,527,2.249,528,2.249,529,2.249]],["title/controllers/UsersController.html",[0,1.078,530,1.949]],["body/controllers/UsersController.html",[0,1.569,2,1.719,3,0.43,4,0.43,5,0.365,7,0.43,8,0.034,9,0.723,10,0.43,11,0.149,12,0.025,13,0.03,14,0.025,52,3.212,130,1.087,530,3.377,531,3.715,532,4.478]],["title/modules/UsersModule.html",[15,1.181,29,1.571]],["body/modules/UsersModule.html",[2,1.74,3,0.332,4,0.332,5,0.282,7,0.536,8,0.035,9,0.557,10,0.332,11,0.115,12,0.019,13,0.025,14,0.019,15,1.942,17,1.599,18,1.599,19,1.956,20,1.956,21,1.599,22,2.865,23,2.865,29,2.978,31,2.567,32,1.956,33,1.599,35,2.188,39,2.188,40,1.454,87,2.352,130,0.838,167,1.956,170,2.865,530,3.204,533,2.865,534,2.865,535,3.455,536,3.455,537,3.455,538,3.455]],["title/injectables/UsersService.html",[47,0.985,87,1.181]],["body/injectables/UsersService.html",[3,0.25,4,0.25,5,0.212,7,0.485,8,0.036,9,0.42,10,0.25,11,0.086,12,0.015,13,0.021,14,0.015,40,1.097,47,1.195,48,1.33,54,0.42,55,0.995,56,2.56,66,0.908,68,1.157,69,1.157,70,0.704,71,1.157,73,1.163,87,1.433,101,3.326,102,1.84,118,1.837,130,0.906,138,1.309,145,1.206,167,1.475,179,2.115,180,2.161,184,3.097,187,3.954,191,1.868,192,2.161,193,1.65,201,2.858,204,1.572,205,1.837,206,2.678,208,1.868,210,1.868,256,1.475,309,1.906,390,1.572,392,1.65,403,1.868,473,1.868,487,3.097,488,2.161,489,2.161,490,2.161,539,2.161,540,3.734,541,3.734,542,2.605,543,3.734,544,2.605,545,3.734,546,2.605,547,2.605,548,3.734,549,2.605,550,2.605]],["title/coverage.html",[551,3.009]],["body/coverage.html",[0,1.713,1,1.743,5,0.224,6,2.283,8,0.035,11,0.192,12,0.015,13,0.022,14,0.015,21,1.274,30,1.559,43,2.199,47,1.65,49,2.283,50,1.559,51,2.785,70,0.444,78,1.743,87,1.057,89,1.635,98,1.743,127,1.057,130,0.668,163,1.405,165,1.743,168,1.559,176,2.283,201,1.559,203,2.283,216,2.785,281,1.974,282,2.283,308,2.283,329,1.559,336,2.283,357,1.974,358,2.283,364,1.974,365,2.283,390,1.159,391,2.283,404,1.743,405,2.283,433,1.405,450,5.141,476,2.283,499,2.283,530,1.743,531,2.283,539,2.283,551,1.974,552,2.753,553,2.753,554,2.753,555,5.496,556,2.283,557,3.884,558,2.283,559,3.884,560,4.5,561,2.753,562,2.753,563,2.753,564,4.887,565,3.884,566,4.5,567,2.283,568,2.753,569,2.753,570,2.753,571,2.753]],["title/dependencies.html",[18,1.712,572,2.572]],["body/dependencies.html",[8,0.036,9,0.579,11,0.154,12,0.02,13,0.026,14,0.02,18,1.661,40,1.511,94,2.574,96,2.273,97,2.632,100,1.832,212,2.151,213,1.661,375,2.977,435,2.977,516,2.977,573,5.154,574,3.589,575,3.589,576,3.589,577,3.589,578,3.589,579,3.589,580,3.589,581,3.589,582,3.589,583,3.589,584,3.589,585,3.589,586,3.589,587,3.589,588,3.589,589,3.589,590,3.589,591,3.589,592,3.589,593,3.589,594,3.589,595,3.589,596,3.589,597,3.589,598,3.589,599,3.589,600,3.589,601,3.589,602,3.589,603,3.589]],["title/miscellaneous/functions.html",[604,1.628,605,3.069]],["body/miscellaneous/functions.html",[8,0.032,12,0.025,13,0.03,14,0.025,21,2.614,54,0.709,62,3.339,68,1.066,69,1.066,71,1.066,72,3.151,165,3.339,369,4.373,558,3.644,567,3.644,604,2.782,605,3.644,606,4.393,607,4.393,608,4.393]],["title/index.html",[54,0.415,609,2.572,610,2.572]],["body/index.html",[8,0.035,12,0.021,13,0.026,14,0.021,97,2.073,213,1.694,254,3.904,413,3.036,417,3.036,551,2.625,611,3.66,612,3.66,613,4.707,614,3.66,615,3.66,616,3.66,617,3.66,618,3.66,619,3.66,620,3.66,621,3.66,622,3.66,623,3.66,624,3.66,625,3.66,626,5.914,627,3.66,628,3.66,629,3.66,630,5.815,631,3.66,632,3.66,633,3.66,634,3.66,635,3.66,636,4.707,637,4.707,638,3.66,639,3.66,640,3.66]],["title/modules.html",[17,1.941]],["body/modules.html",[8,0.03,12,0.025,13,0.03,14,0.025,16,2.795,17,2.043,27,2.5,28,2.5,29,2.254,641,5.867,642,5.867,643,5.867,644,5.867]],["title/overview.html",[645,3.48]],["body/overview.html",[2,1.287,8,0.034,12,0.019,13,0.025,14,0.019,15,1.287,16,3.806,17,1.552,18,1.552,19,1.899,20,1.899,21,1.552,22,1.899,23,1.899,24,2.782,25,2.782,26,2.782,27,3.28,28,3.28,29,2.957,30,2.824,31,2.517,32,1.899,33,1.552,48,1.712,87,2.257,89,2.099,151,2.782,152,2.782,202,1.175,433,2.546,466,2.782,468,2.782,533,2.782,534,2.782,645,2.782,646,4.446,647,3.354,648,3.354]],["title/miscellaneous/variables.html",[604,1.628,649,3.069]],["body/miscellaneous/variables.html",[8,0.035,12,0.022,13,0.027,14,0.022,43,2.757,54,0.623,89,1.625,95,2.768,98,3.083,107,2.186,127,2.047,140,1.625,205,1.625,216,2.768,218,3.201,236,4.038,237,3.491,256,2.757,273,3.201,274,3.201,275,3.201,276,3.201,277,3.201,278,3.201,279,3.201,280,3.201,556,3.201,604,2.444,649,3.201,650,3.86,651,3.86,652,3.86,653,4.868,654,4.868,655,3.86,656,3.86,657,3.86,658,3.86]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":450,"title":{},"body":{"controllers/TimeController.html":{},"coverage.html":{}}}],["0.1.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":519,"title":{},"body":{"classes/User.html":{}}}],["1.1.0",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":648,"title":{},"body":{"overview.html":{}}}],["12.0.1",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["3.0.0",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["3.0.12",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":646,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":647,"title":{},"body":{"overview.html":{}}}],["5.21.5",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.6",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["7.18.2",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["8.2.0",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["accessors",{"_index":502,"title":{},"body":{"classes/User.html":{}}}],["accesstoken",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{}}}],["accesstokenexpiresat",{"_index":310,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["accesstokenlifetime",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":430,"title":{},"body":{"controllers/TimeController.html":{}}}],["activity",{"_index":415,"title":{},"body":{"controllers/TimeController.html":{}}}],["allowbearertokensinquerystring",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allownull",{"_index":395,"title":{},"body":{"classes/Time.html":{},"classes/User.html":{}}}],["already",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["angular",{"_index":621,"title":{},"body":{"index.html":{}}}],["app",{"_index":628,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":618,"title":{},"body":{"index.html":{}}}],["apply(authenticateuser).forroutes(timecontroller",{"_index":475,"title":{},"body":{"modules/TimeModule.html":{}}}],["apply(authenticateuser).forroutes({path",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["appmodule",{"_index":16,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":30,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":287,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["async",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{}}}],["auth/sign",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":50,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"coverage.html":{}}}],["authenticated",{"_index":421,"title":{},"body":{"controllers/TimeController.html":{}}}],["authenticateuser",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticateuser(req",{"_index":608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authmodule",{"_index":27,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":89,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/SignUpParameters.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["autoloadmodels",{"_index":269,"title":{},"body":{"classes/ConfigService.html":{}}}],["await",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["badrequestexception",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"classes/User.html":{}}}],["badrequestexception(\"password",{"_index":526,"title":{},"body":{"classes/User.html":{}}}],["badrequestexception(\"user",{"_index":451,"title":{},"body":{"controllers/TimeController.html":{}}}],["badrequestexception('there",{"_index":461,"title":{},"body":{"controllers/TimeController.html":{}}}],["badrequestexception(null",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["baseservice",{"_index":201,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["baseservice:10",{"_index":488,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["baseservice:4",{"_index":489,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["bcrypt",{"_index":516,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.comparesync(pw",{"_index":520,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.gensaltsync(10",{"_index":529,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hashsync(value",{"_index":528,"title":{},"body":{"classes/User.html":{}}}],["belongsto",{"_index":330,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["belongsto(undefined",{"_index":321,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["bet",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["body",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["boolean",{"_index":240,"title":{},"body":{"classes/ConfigService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":644,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":641,"title":{},"body":{"modules.html":{}}}],["building",{"_index":614,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":370,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["catch",{"_index":284,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["catch(exception",{"_index":285,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["catch(httpexception",{"_index":290,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(oautherror",{"_index":361,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["characters",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["class",{"_index":11,"title":{"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":202,"title":{},"body":{"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["clientid",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"classes/SignUpParameters.html":{}}}],["clientmodel",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientsecret",{"_index":337,"title":{},"body":{"classes/OAuthClient.html":{}}}],["clienttype",{"_index":338,"title":{},"body":{"classes/OAuthClient.html":{}}}],["clocked",{"_index":452,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockin",{"_index":406,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockin(@param('label",{"_index":444,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockin(label",{"_index":409,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockout",{"_index":407,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockout(@param('timerid",{"_index":458,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockout(timerid",{"_index":422,"title":{},"body":{"controllers/TimeController.html":{}}}],["cluster_appmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_timemodule",{"_index":466,"title":{},"body":{"modules/TimeModule.html":{},"overview.html":{}}}],["cluster_timemodule_imports",{"_index":467,"title":{},"body":{"modules/TimeModule.html":{}}}],["cluster_timemodule_providers",{"_index":468,"title":{},"body":{"modules/TimeModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":533,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":534,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":535,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":327,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["column(datatype.string",{"_index":349,"title":{},"body":{"classes/OAuthClient.html":{}}}],["column({type",{"_index":314,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["confidential",{"_index":354,"title":{},"body":{"classes/OAuthClient.html":{}}}],["configservice",{"_index":43,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env",{"_index":273,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configservice.getpostgresconfig",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["configure(consumer",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["console.log('before",{"_index":378,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["console.log(data",{"_index":442,"title":{},"body":{"controllers/TimeController.html":{}}}],["console.log(email",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["console.log(exception",{"_index":297,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["const",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["constructor(env",{"_index":223,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(model",{"_index":207,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["constructor(timemodel",{"_index":479,"title":{},"body":{"injectables/TimeService.html":{}}}],["constructor(usermodel",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["consumer",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["context",{"_index":372,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["context.gethandler",{"_index":379,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":383,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TimeController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["controller('time",{"_index":437,"title":{},"body":{"controllers/TimeController.html":{}}}],["controller('user",{"_index":532,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":551,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":206,"title":{},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["create(data",{"_index":210,"title":{},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["ctx",{"_index":291,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["ctx.getrequest",{"_index":294,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["ctx.getresponse",{"_index":293,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["current",{"_index":420,"title":{},"body":{"controllers/TimeController.html":{}}}],["data",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":267,"title":{},"body":{"classes/ConfigService.html":{}}}],["datatype",{"_index":328,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["datatype.array(datatype.string",{"_index":352,"title":{},"body":{"classes/OAuthClient.html":{}}}],["datatype.date",{"_index":335,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["datatype.enum",{"_index":353,"title":{},"body":{"classes/OAuthClient.html":{}}}],["datatype.string",{"_index":334,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/User.html":{}}}],["datatype.uuid",{"_index":402,"title":{},"body":{"classes/Time.html":{},"classes/User.html":{}}}],["datatype.virtual",{"_index":522,"title":{},"body":{"classes/User.html":{}}}],["date",{"_index":317,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{}}}],["date().toisostring",{"_index":302,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["ddthh:mm:ss.sssz",{"_index":447,"title":{},"body":{"controllers/TimeController.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"classes/User.html":{}}}],["default",{"_index":236,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":341,"title":{},"body":{"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["defined",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["delete('sign",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["deletedtokens",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":18,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":497,"title":{},"body":{"injectables/TimeService.html":{}}}],["description",{"_index":417,"title":{},"body":{"controllers/TimeController.html":{},"index.html":{}}}],["dev",{"_index":257,"title":{},"body":{"classes/ConfigService.html":{}}}],["development",{"_index":629,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":258,"title":{},"body":{"classes/ConfigService.html":{}}}],["documentation",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":416,"title":{},"body":{"controllers/TimeController.html":{}}}],["e2e",{"_index":638,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":615,"title":{},"body":{"index.html":{}}}],["email",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["endtime",{"_index":392,"title":{},"body":{"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["ensurevalues",{"_index":218,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["ensurevalues(keys",{"_index":227,"title":{},"body":{"classes/ConfigService.html":{}}}],["env",{"_index":226,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${key",{"_index":250,"title":{},"body":{"classes/ConfigService.html":{}}}],["error",{"_index":248,"title":{},"body":{"classes/ConfigService.html":{}}}],["error(`config",{"_index":247,"title":{},"body":{"classes/ConfigService.html":{}}}],["exception",{"_index":289,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["exception.code",{"_index":363,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["exception.getstatus",{"_index":296,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":305,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["exception.stack",{"_index":307,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["exceptionfilter",{"_index":283,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["executioncontext",{"_index":368,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["exists",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"dependencies.html":{}}}],["extends",{"_index":309,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":256,"title":{},"body":{"classes/ConfigService.html":{},"classes/Time.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["finish",{"_index":425,"title":{},"body":{"controllers/TimeController.html":{}}}],["foreignkey",{"_index":331,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["foreignkey(undefined",{"_index":319,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["found",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["framework",{"_index":613,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["function",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":605,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getall",{"_index":408,"title":{},"body":{"controllers/TimeController.html":{}}}],["getall(@res",{"_index":439,"title":{},"body":{"controllers/TimeController.html":{}}}],["getall(res",{"_index":427,"title":{},"body":{"controllers/TimeController.html":{}}}],["getclient",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["getclient(clientid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["getport",{"_index":219,"title":{},"body":{"classes/ConfigService.html":{}}}],["getpostgresconfig",{"_index":220,"title":{},"body":{"classes/ConfigService.html":{}}}],["gettimefromid",{"_index":477,"title":{},"body":{"injectables/TimeService.html":{}}}],["gettimefromid(id",{"_index":483,"title":{},"body":{"injectables/TimeService.html":{}}}],["gettimesfromuseriddescending",{"_index":478,"title":{},"body":{"injectables/TimeService.html":{}}}],["gettimesfromuseriddescending(userid",{"_index":485,"title":{},"body":{"injectables/TimeService.html":{}}}],["getting",{"_index":609,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":540,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemail(email",{"_index":543,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemailwithstarttime",{"_index":541,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemailwithstarttime(email",{"_index":545,"title":{},"body":{"injectables/UsersService.html":{}}}],["getvalue",{"_index":221,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":233,"title":{},"body":{"classes/ConfigService.html":{}}}],["grants",{"_index":339,"title":{},"body":{"classes/OAuthClient.html":{}}}],["handle",{"_index":380,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["hasmany",{"_index":515,"title":{},"body":{"classes/User.html":{}}}],["hasmany(undefined",{"_index":508,"title":{},"body":{"classes/User.html":{}}}],["heavily",{"_index":619,"title":{},"body":{"index.html":{}}}],["host",{"_index":260,"title":{},"body":{"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["host.switchtohttp",{"_index":292,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["httpexception",{"_index":286,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":281,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["id",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{}}}],["identifier",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["if(!client",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["if(!time",{"_index":460,"title":{},"body":{"controllers/TimeController.html":{}}}],["if(user",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["if(value.length",{"_index":525,"title":{},"body":{"classes/User.html":{}}}],["ignore",{"_index":455,"title":{},"body":{"controllers/TimeController.html":{}}}],["implements",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/TimeModule.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{}}}],["in/:label",{"_index":411,"title":{},"body":{"controllers/TimeController.html":{}}}],["include",{"_index":549,"title":{},"body":{"injectables/UsersService.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":487,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":47,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(oauthaccesstoken",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(oauthclient",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(time",{"_index":491,"title":{},"body":{"injectables/TimeService.html":{}}}],["injectmodel(user",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inspired",{"_index":620,"title":{},"body":{"index.html":{}}}],["installation",{"_index":625,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":627,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":366,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["intercept(context",{"_index":367,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["isemail",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["isemail()@isnotempty",{"_index":385,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["isnotempty",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["isnotempty()@length(8",{"_index":388,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["isproduction",{"_index":222,"title":{},"body":{"classes/ConfigService.html":{}}}],["isvalidpassword",{"_index":501,"title":{},"body":{"classes/User.html":{}}}],["isvalidpassword(pw",{"_index":510,"title":{},"body":{"classes/User.html":{}}}],["json",{"_index":299,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["k",{"_index":244,"title":{},"body":{"classes/ConfigService.html":{}}}],["key",{"_index":238,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":229,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":251,"title":{},"body":{"classes/ConfigService.html":{}}}],["label",{"_index":393,"title":{},"body":{"classes/Time.html":{},"controllers/TimeController.html":{}}}],["latest",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["len",{"_index":518,"title":{},"body":{"classes/User.html":{}}}],["length",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["length(8",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["lest",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["lib/oauth",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["literal",{"_index":224,"title":{},"body":{"classes/ConfigService.html":{}}}],["logout",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(token",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["map",{"_index":376,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["map((data",{"_index":382,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["matching",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{}}}],["metadata",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["methods",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["miscellaneous",{"_index":604,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":249,"title":{},"body":{"classes/ConfigService.html":{}}}],["mm",{"_index":446,"title":{},"body":{"controllers/TimeController.html":{}}}],["mode",{"_index":254,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["model",{"_index":205,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["modelctor",{"_index":208,"title":{},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":15,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":17,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/time/time.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":435,"title":{},"body":{"controllers/TimeController.html":{},"dependencies.html":{}}}],["moment().format('yyyy",{"_index":445,"title":{},"body":{"controllers/TimeController.html":{}}}],["mysql2",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["native_application",{"_index":356,"title":{},"body":{"classes/OAuthClient.html":{}}}],["nest",{"_index":622,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":374,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/sequelize/dist/interfaces/sequelize",{"_index":241,"title":{},"body":{"classes/ConfigService.html":{}}}],["nestmodule",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["new",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newtime",{"_index":463,"title":{},"body":{"controllers/TimeController.html":{}}}],["next",{"_index":369,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"miscellaneous/functions.html":{}}}],["node.js",{"_index":612,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["notfoundexception(null,'oauth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["npm",{"_index":626,"title":{},"body":{"index.html":{}}}],["null",{"_index":403,"title":{},"body":{"classes/Time.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["oauth",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth.token(request",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["oauth2",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"dependencies.html":{}}}],["oauth2server",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"miscellaneous/variables.html":{}}}],["oauth2server.request(req",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["oauth2server.response(res",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["oauthaccesstoken",{"_index":168,"title":{"classes/OAuthAccessToken.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"coverage.html":{}}}],["oauthclient",{"_index":163,"title":{"classes/OAuthClient.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"coverage.html":{}}}],["oauthclient.model",{"_index":333,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["oautherror",{"_index":359,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["oautherrorfilter",{"_index":357,"title":{"classes/OAuthErrorFilter.html":{}},"body":{"classes/OAuthErrorFilter.html":{},"coverage.html":{}}}],["object",{"_index":418,"title":{},"body":{"controllers/TimeController.html":{}}}],["observable",{"_index":373,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["ok",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["one",{"_index":431,"title":{},"body":{"controllers/TimeController.html":{}}}],["optional",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options.interface",{"_index":242,"title":{},"body":{"classes/ConfigService.html":{}}}],["order",{"_index":496,"title":{},"body":{"injectables/TimeService.html":{}}}],["out",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["out/:timerid",{"_index":423,"title":{},"body":{"controllers/TimeController.html":{}}}],["overview",{"_index":645,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":572,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":432,"title":{},"body":{"controllers/TimeController.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parseint(this.getvalue('postgres_port",{"_index":263,"title":{},"body":{"classes/ConfigService.html":{}}}],["password",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["passwordplain",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["passwordplain(value",{"_index":524,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":303,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["pg",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":381,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["port",{"_index":262,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["post('/clock",{"_index":410,"title":{},"body":{"controllers/TimeController.html":{}}}],["post('sign",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["postgres",{"_index":259,"title":{},"body":{"classes/ConfigService.html":{}}}],["postgres_auto_load_models",{"_index":279,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_database",{"_index":278,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_host",{"_index":274,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":277,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":275,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_syncronize",{"_index":280,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_username",{"_index":276,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TimeController.html":{},"controllers/UsersController.html":{}}}],["primarykey",{"_index":346,"title":{},"body":{"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["private",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":633,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":611,"title":{},"body":{"index.html":{}}}],["promise",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":204,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":217,"title":{},"body":{"classes/ConfigService.html":{},"classes/OAuthClient.html":{}}}],["pw",{"_index":512,"title":{},"body":{"classes/User.html":{}}}],["rc.0",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["redirecturi",{"_index":340,"title":{},"body":{"classes/OAuthClient.html":{}}}],["reflect",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["refresh_token",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":311,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["refreshtokenexpires",{"_index":312,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["refreshtokenlifetime",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":624,"title":{},"body":{"index.html":{}}}],["req",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{}}}],["request.url",{"_index":304,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["requestmethod",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["requestmethod.delete",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["require('dotenv').config",{"_index":243,"title":{},"body":{"classes/ConfigService.html":{}}}],["require('moment",{"_index":436,"title":{},"body":{"controllers/TimeController.html":{}}}],["requireclientauthentication",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":550,"title":{},"body":{"injectables/UsersService.html":{}}}],["res",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"miscellaneous/functions.html":{}}}],["res.locals.token.user.id",{"_index":440,"title":{},"body":{"controllers/TimeController.html":{}}}],["res.send(data",{"_index":443,"title":{},"body":{"controllers/TimeController.html":{}}}],["res.status(200).send",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["res.status(200).send(data",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["res.status(200).send({success",{"_index":457,"title":{},"body":{"controllers/TimeController.html":{}}}],["reset",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["responseformatinterceptor",{"_index":364,"title":{"injectables/ResponseFormatInterceptor.html":{}},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["result",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":630,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":375,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":377,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["scalable",{"_index":616,"title":{},"body":{"index.html":{}}}],["sequelize",{"_index":212,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["sequelize.op.ne",{"_index":495,"title":{},"body":{"injectables/TimeService.html":{}}}],["sequelize.uuidv4",{"_index":351,"title":{},"body":{"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["sequelizemodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([time",{"_index":474,"title":{},"body":{"modules/TimeModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forroot",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["sequelizemoduleoptions",{"_index":232,"title":{},"body":{"classes/ConfigService.html":{}}}],["server",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"dependencies.html":{},"index.html":{}}}],["set",{"_index":523,"title":{},"body":{"classes/User.html":{}}}],["setpasswordplain(value",{"_index":513,"title":{},"body":{"classes/User.html":{}}}],["shared/middleware/auth",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["shared/models/oauthaccesstoken.model",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["shared/models/oauthclient.model",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["shared/models/times.model",{"_index":473,"title":{},"body":{"modules/TimeModule.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["shared/models/user.model",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["shared/services/base.service",{"_index":490,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["shared/services/config.service",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":617,"title":{},"body":{"index.html":{}}}],["signin",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["signin(req",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{}}}],["signout",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["signout(@res",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["signout(res",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@body",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["signup(signupparameters",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupparameters",{"_index":78,"title":{"classes/SignUpParameters.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"coverage.html":{}}}],["single",{"_index":414,"title":{},"body":{"controllers/TimeController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../auth.ts",{"_index":606,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.service.ts",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../oauth.ts",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":49,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/lib/oauth.ts",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:20",{"_index":386,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:23",{"_index":387,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:27",{"_index":389,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:30",{"_index":384,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:39",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:67",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:77",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.module.ts:18",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:20",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:28",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:8",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/time/time.controller.ts",{"_index":405,"title":{},"body":{"controllers/TimeController.html":{},"coverage.html":{}}}],["src/modules/time/time.controller.ts:16",{"_index":428,"title":{},"body":{"controllers/TimeController.html":{}}}],["src/modules/time/time.controller.ts:29",{"_index":412,"title":{},"body":{"controllers/TimeController.html":{}}}],["src/modules/time/time.controller.ts:52",{"_index":424,"title":{},"body":{"controllers/TimeController.html":{}}}],["src/modules/time/time.module.ts",{"_index":469,"title":{},"body":{"modules/TimeModule.html":{}}}],["src/modules/time/time.module.ts:16",{"_index":470,"title":{},"body":{"modules/TimeModule.html":{}}}],["src/modules/time/time.service.ts",{"_index":476,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["src/modules/time/time.service.ts:16",{"_index":482,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/modules/time/time.service.ts:19",{"_index":486,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/modules/time/time.service.ts:32",{"_index":484,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/modules/time/time.service.ts:8",{"_index":480,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/modules/user/user.controller.ts",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/user/user.module.ts",{"_index":536,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":539,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:15",{"_index":544,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:23",{"_index":546,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:8",{"_index":542,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/shared/filters/httpexceptionfilter.ts",{"_index":282,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/filters/httpexceptionfilter.ts:6",{"_index":288,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/shared/filters/oautherrorfilter.ts",{"_index":358,"title":{},"body":{"classes/OAuthErrorFilter.html":{},"coverage.html":{}}}],["src/shared/filters/oautherrorfilter.ts:7",{"_index":360,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["src/shared/interceptors/responseformatinterceptor.ts",{"_index":365,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/responseformatinterceptor.ts:7",{"_index":371,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["src/shared/middleware/auth.ts",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts",{"_index":308,"title":{},"body":{"classes/OAuthAccessToken.html":{},"coverage.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:11",{"_index":316,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:17",{"_index":323,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:22",{"_index":318,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:27",{"_index":324,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:31",{"_index":326,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:34",{"_index":320,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:37",{"_index":325,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:40",{"_index":322,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthclient.model.ts",{"_index":336,"title":{},"body":{"classes/OAuthClient.html":{},"coverage.html":{}}}],["src/shared/models/oauthclient.model.ts:12",{"_index":348,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:17",{"_index":345,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:23",{"_index":342,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:30",{"_index":344,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:33",{"_index":350,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/times.model.ts",{"_index":391,"title":{},"body":{"classes/Time.html":{},"coverage.html":{}}}],["src/shared/models/times.model.ts:12",{"_index":397,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:18",{"_index":399,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:25",{"_index":396,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:30",{"_index":398,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:33",{"_index":401,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:36",{"_index":400,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/user.model.ts",{"_index":499,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/shared/models/user.model.ts:13",{"_index":506,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:19",{"_index":503,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:28",{"_index":505,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:30",{"_index":511,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:40",{"_index":514,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:50",{"_index":507,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:53",{"_index":509,"title":{},"body":{"classes/User.html":{}}}],["src/shared/services/auth.service.ts",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["src/shared/services/base.service.ts",{"_index":203,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["src/shared/services/base.service.ts:10",{"_index":211,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/services/base.service.ts:4",{"_index":209,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/services/config.service.ts",{"_index":216,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/services/config.service.ts:18",{"_index":228,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:23",{"_index":230,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:27",{"_index":239,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:32",{"_index":231,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:5",{"_index":225,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:9",{"_index":235,"title":{},"body":{"classes/ConfigService.html":{}}}],["stack",{"_index":306,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["start",{"_index":413,"title":{},"body":{"controllers/TimeController.html":{},"index.html":{}}}],["start:dev",{"_index":632,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":634,"title":{},"body":{"index.html":{}}}],["started",{"_index":610,"title":{"index.html":{}},"body":{}}],["starter",{"_index":623,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":394,"title":{},"body":{"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{}}}],["statements",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":295,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["status(exception.code",{"_index":362,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["status(status",{"_index":298,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":300,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{}}}],["string",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["success",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["such",{"_index":462,"title":{},"body":{"controllers/TimeController.html":{}}}],["super(timemodel",{"_index":492,"title":{},"body":{"injectables/TimeService.html":{}}}],["super(usermodel",{"_index":547,"title":{},"body":{"injectables/UsersService.html":{}}}],["support",{"_index":642,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":643,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":271,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":329,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":637,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":640,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":639,"title":{},"body":{"index.html":{}}}],["tests",{"_index":636,"title":{},"body":{"index.html":{}}}],["this.authservice.getclient(clientid",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.authservice.logout(res.locals.token.accesstoken",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.clientmodel.findone",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.env[key",{"_index":246,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getdatavalue('password",{"_index":521,"title":{},"body":{"classes/User.html":{}}}],["this.getvalue('mode",{"_index":255,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('port",{"_index":253,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_auto_load_models",{"_index":270,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_database",{"_index":268,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_host",{"_index":261,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_password",{"_index":266,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_syncronize",{"_index":272,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_username",{"_index":265,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":252,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.model",{"_index":214,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.create(data",{"_index":215,"title":{},"body":{"classes/BaseService.html":{}}}],["this.setdatavalue('password",{"_index":527,"title":{},"body":{"classes/User.html":{}}}],["this.timemodel.create(data",{"_index":493,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timemodel.findall",{"_index":494,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timemodel.findone",{"_index":498,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timesservice.create",{"_index":453,"title":{},"body":{"controllers/TimeController.html":{}}}],["this.timesservice.gettimefromid(timerid",{"_index":459,"title":{},"body":{"controllers/TimeController.html":{}}}],["this.timesservice.gettimesfromuseriddescending(userid",{"_index":441,"title":{},"body":{"controllers/TimeController.html":{}}}],["this.tokenmodel.destroy",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findone",{"_index":548,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create({email",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.userservice.getuserbyemail(email",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.userservice.getuserbyemailwithstarttime(res.locals.token.user.email",{"_index":448,"title":{},"body":{"controllers/TimeController.html":{}}}],["throw",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"classes/User.html":{}}}],["throwonmissing",{"_index":234,"title":{},"body":{"classes/ConfigService.html":{}}}],["time",{"_index":390,"title":{"classes/Time.html":{}},"body":{"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["time.controller",{"_index":471,"title":{},"body":{"modules/TimeModule.html":{}}}],["time.id",{"_index":465,"title":{},"body":{"controllers/TimeController.html":{}}}],["time.service",{"_index":434,"title":{},"body":{"controllers/TimeController.html":{},"modules/TimeModule.html":{}}}],["time.update({endtime",{"_index":464,"title":{},"body":{"controllers/TimeController.html":{}}}],["timecontroller",{"_index":404,"title":{"controllers/TimeController.html":{}},"body":{"controllers/TimeController.html":{},"modules/TimeModule.html":{},"coverage.html":{}}}],["timemodel",{"_index":481,"title":{},"body":{"injectables/TimeService.html":{}}}],["timemodule",{"_index":28,"title":{"modules/TimeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TimeModule.html":{},"modules.html":{},"overview.html":{}}}],["timerid",{"_index":426,"title":{},"body":{"controllers/TimeController.html":{}}}],["times",{"_index":500,"title":{},"body":{"classes/User.html":{}}}],["times.model",{"_index":517,"title":{},"body":{"classes/User.html":{}}}],["timeservice",{"_index":433,"title":{"injectables/TimeService.html":{}},"body":{"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"coverage.html":{},"overview.html":{}}}],["timesservice",{"_index":438,"title":{},"body":{"controllers/TimeController.html":{}}}],["timestamp",{"_index":301,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["token",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenmodel",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["tracked",{"_index":429,"title":{},"body":{"controllers/TimeController.html":{}}}],["transformer",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":454,"title":{},"body":{"controllers/TimeController.html":{}}}],["type",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeof",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["types/bcrypt",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["types/oauth2",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["types/validator",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":213,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["undefined",{"_index":245,"title":{},"body":{"classes/ConfigService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["undefined})@index",{"_index":315,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["unique",{"_index":347,"title":{},"body":{"classes/OAuthClient.html":{}}}],["unit",{"_index":635,"title":{},"body":{"index.html":{}}}],["up",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["used",{"_index":419,"title":{},"body":{"controllers/TimeController.html":{}}}],["user",{"_index":130,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.addtime(time",{"_index":456,"title":{},"body":{"controllers/TimeController.html":{}}}],["user.controller",{"_index":537,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.model",{"_index":332,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["user.service",{"_index":538,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.times.length",{"_index":449,"title":{},"body":{"controllers/TimeController.html":{}}}],["user/user.module",{"_index":472,"title":{},"body":{"modules/TimeModule.html":{}}}],["user/user.service",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["userid",{"_index":313,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{}}}],["usermodel",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":264,"title":{},"body":{"classes/ConfigService.html":{}}}],["userscontroller",{"_index":530,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["usersmodule",{"_index":29,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":87,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":504,"title":{},"body":{"classes/User.html":{}}}],["validator",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"dependencies.html":{}}}],["value",{"_index":237,"title":{},"body":{"classes/ConfigService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":343,"title":{},"body":{"classes/OAuthClient.html":{}}}],["variable",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":649,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"modules/TimeModule.html":{},"classes/User.html":{}}}],["watch",{"_index":631,"title":{},"body":{"index.html":{}}}],["web_application",{"_index":355,"title":{},"body":{"classes/OAuthClient.html":{}}}],["zoom",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nTimeModule\n\nTimeModule\n\nAppModule -->\n\nTimeModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            TimeModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UsersModule } from './modules/user/user.module';\nimport { TimeModule } from './modules/time/time.module';\n\nimport { configService } from './shared/services/config.service';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tSequelizeModule.forRoot({\n\t\t\t...configService.getPostgresConfig(),\n\t\t}),\n\t\tUsersModule,\n\t\tTimeModule,\n\t],\n\tcontrollers: [AppController],\n\tproviders: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-in')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('sign-out')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpParameters: SignUpParameters)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-up')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpParameters\n                                    \n                                                SignUpParameters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tBadRequestException,\n\tBody,\n\tController,\n\tDelete, Get,\n\tNotFoundException,\n\tPost, Req, Res, UnauthorizedException,\n} from '@nestjs/common';\nimport { UsersService } from '../user/user.service';\nimport { AuthService } from './auth.service';\nimport { IsEmail, IsNotEmpty, Length } from 'class-validator';\nimport * as OAuth2Server from 'oauth2-server';\nimport { oauth } from '../../lib/oauth';\n\nimport { Request, Response } from 'express';\n\nclass SignUpParameters{\n\t@IsEmail()\n\t@IsNotEmpty()\n\temail: string;\n\n\t@IsNotEmpty()\n\tfullName: string;\n\n\t@IsNotEmpty()\n\t@Length(8, 255, {message: \"Password must bet at lest 8 characters long\"})\n\tpassword: string;\n\n\t@IsNotEmpty()\n\tclientId: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n\tconstructor(private readonly userService: UsersService, private readonly authService: AuthService){}\n\n\n\t@Post('sign-up')\n\tasync signUp(@Body() signUpParameters: SignUpParameters){\n\t\tconst {\n\t\t\temail,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,\n\t\t} = signUpParameters;\n\t\tconsole.log(email,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,)\n\t\tconst client = await this.authService.getClient(clientId);\n\n\t\tif(!client){\n\t\t\tthrow new NotFoundException(null,'OAuth client not found')\n\t\t}\n\t\tconst user = await this.userService.getUserByEmail(email);\n\t\tif(user){\n\t\t\tthrow new BadRequestException(null, 'User already exists')\n\t\t}\n\t\tawait this.userService.create({email, fullName, passwordPlain: password});\n\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\tmessage: 'ok'\n\t\t};\n\t}\n\t@Post('sign-in')\n\tasync signIn(@Req() req: Request, @Res() res: Response){\n\n\t\tconst request = new OAuth2Server.Request(req);\n\t\tconst response = new OAuth2Server.Response(res);\n\n\t\tconst data = await oauth.token(request, response);\n\n\t\tres.status(200).send(data);\n\t}\n\t@Delete('sign-out')\n\tasync signOut(@Res() res: Response){\n\t\tawait this.authService.logout(res.locals.token.accessToken);\n\t\tres.status(200).send()\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { OAuthClient } from '../../shared/models/oAuthClient.model';\nimport { authenticateUser } from '../../shared/middleware/auth';\nimport { AuthService } from './auth.service';\nimport { User } from '../../shared/models/user.model';\nimport { UsersService } from '../user/user.service';\nimport { OAuthAccessToken } from '../../shared/models/oAuthAccessToken.model';\n\n\n@Module({\n\timports: [SequelizeModule.forFeature([User, OAuthClient, OAuthAccessToken])],\n\tproviders: [UsersService, AuthService],\n\tcontrollers: [AuthController]\n})\nexport class AuthModule implements NestModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer\n\t\t\t.apply(authenticateUser).forRoutes({path: '/auth/sign-out', method: RequestMethod.DELETE});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getClient\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel, clientModel, tokenModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClient(clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from '../../shared/models/user.model';\nimport { OAuthClient } from '../../shared/models/oAuthClient.model';\nimport { OAuthAccessToken } from '../../shared/models/oAuthAccessToken.model';\n\n@Injectable()\nexport class AuthService {\n\tconstructor(\n\t\t@InjectModel(User)\n\t\tprivate userModel: typeof User,\n\t\t@InjectModel(OAuthClient)\n\t\tprivate clientModel: typeof OAuthClient,\n\t\t@InjectModel(OAuthAccessToken)\n\t\tprivate tokenModel: typeof OAuthAccessToken,\n\t) {\n\n\t}\n\n\tasync getClient(clientId: string): Promise{\n\t\treturn this.clientModel.findOne({\n\t\t\twhere: {\n\t\t\t\tid: clientId,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync logout(token: string): Promise{\n\t\tconst deletedTokens = await this.tokenModel.destroy({\n\t\t\twhere: {\n\t\t\t\taccessToken: token,\n\t\t\t},\n\t\t});\n\t\treturn deletedTokens \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/base.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelCtor)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/base.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    ModelCtor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelCtor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/base.service.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModelCtor } from 'sequelize-typescript';\n\nexport class BaseService {\n\tprivate model: ModelCtor;\n\n\tconstructor(model : ModelCtor){\n\t\tthis.model = model;\n\t}\n\n\tasync create(data){\n\t\treturn this.model.create(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getPort\n                            \n                            \n                                    Public\n                                getPostgresConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                            \n                                    Public\n                                isProduction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ensureValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPort()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPostgresConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPostgresConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SequelizeModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isProduction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduction()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SequelizeModuleOptions } from '@nestjs/sequelize/dist/interfaces/sequelize-options.interface';\n\nrequire('dotenv').config();\n\nclass ConfigService {\n\n\tconstructor(private env: { [k: string]: string | undefined }) { }\n\n\tprivate getValue(key: string, throwOnMissing = true): string {\n\t\tconst value = this.env[key];\n\t\tif (typeof value === 'undefined' && throwOnMissing) {\n\t\t\tthrow new Error(`config error - missing env.${key}`);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic ensureValues(keys: string[]) {\n\t\tkeys.forEach(k => this.getValue(k, true));\n\t\treturn this;\n\t}\n\n\tpublic getPort() {\n\t\treturn this.getValue('PORT', true);\n\t}\n\n\tpublic isProduction() {\n\t\tconst mode = this.getValue('MODE', false);\n\t\treturn mode != 'DEV';\n\t}\n\n\tpublic getPostgresConfig(): SequelizeModuleOptions {\n\t\treturn {\n\t\t\tdialect: 'postgres',\n\t\t\thost: this.getValue('POSTGRES_HOST'),\n\t\t\tport: parseInt(this.getValue('POSTGRES_PORT')),\n\t\t\tusername: this.getValue('POSTGRES_USERNAME'),\n\t\t\tpassword: this.getValue('POSTGRES_PASSWORD'),\n\t\t\tdatabase: this.getValue('POSTGRES_DATABASE'),\n\t\t\tautoLoadModels: this.getValue('POSTGRES_AUTO_LOAD_MODELS') === 'true',\n\t\t\tsynchronize: this.getValue('POSTGRES_SYNCRONIZE') === 'true',\n\t\t};\n\t}\n\n}\n\nconst configService = new ConfigService(process.env)\n\t.ensureValues([\n\t\t'POSTGRES_HOST',\n\t\t'POSTGRES_PORT',\n\t\t'POSTGRES_USERNAME',\n\t\t'POSTGRES_PASSWORD',\n\t\t'POSTGRES_DATABASE',\n\t\t'POSTGRES_AUTO_LOAD_MODELS',\n\t\t'POSTGRES_SYNCRONIZE',\n\t]);\n\nexport { configService };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/HttpExceptionFilter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/HttpExceptionFilter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n\tcatch(exception: HttpException, host: ArgumentsHost) {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response: Response = ctx.getResponse();\n\t\tconst request: Request = ctx.getRequest();\n\t\tconst status = exception.getStatus();\n\t\tconsole.log(exception)\n\t\tresponse\n\t\t\t.status(status)\n\t\t\t.json({\n\t\t\t\tstatusCode: status,\n\t\t\t\ttimestamp: new Date().toISOString(),\n\t\t\t\tpath: request.url,\n\t\t\t\tmessage: exception.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthAccessToken.html":{"url":"classes/OAuthAccessToken.html","title":"class - OAuthAccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthAccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/oAuthAccessToken.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                accessTokenExpiresAt\n                            \n                            \n                                clientId\n                            \n                            \n                                oAuthClient\n                            \n                            \n                                refreshToken\n                            \n                            \n                                refreshTokenExpires\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessTokenExpiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ForeignKey(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oAuthClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OAuthClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshTokenExpires\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ForeignKey(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, Index, Model, Table, BelongsTo, ForeignKey } from 'sequelize-typescript';\nimport { User } from './user.model';\nimport { OAuthClient } from './oAuthClient.model';\n\n@Table\nexport class OAuthAccessToken extends Model {\n\t@Column({\n\t\ttype: DataType.STRING,\n\t})\n\t@Index\n\taccessToken: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t})\n\t@Index\n\trefreshToken: string;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t})\n\taccessTokenExpiresAt: Date;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t})\n\trefreshTokenExpires: Date;\n\n\n\t@ForeignKey(()=> User)\n\tuserId: string;\n\n\t@ForeignKey(()=> OAuthClient)\n\tclientId: string;\n\n\t@BelongsTo(() => User)\n\tuser: User;\n\n\t@BelongsTo(() => OAuthClient)\n\toAuthClient: OAuthClient;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthClient.html":{"url":"classes/OAuthClient.html","title":"class - OAuthClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/oAuthClient.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientSecret\n                            \n                            \n                                clientType\n                            \n                            \n                                grants\n                            \n                            \n                                id\n                            \n                            \n                                redirectUri\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientSecret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, values: undefined, defaultValue: 'public'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, defaultValue: undefined, primaryKey: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column(DataType.STRING)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, Model, Table } from 'sequelize-typescript';\nimport * as sequelize from 'sequelize';\n\n@Table\nexport class OAuthClient extends Model {\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t\tprimaryKey: true,\n\t\tunique: true,\n\t})\n\tid: string;\n\n\t@Column({\n\t\ttype: DataType.ARRAY(DataType.STRING)\n\t})\n\tgrants: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t})\n\tclientSecret: Date;\n\n\t@Column({\n\t\ttype: DataType.ENUM,\n\t\tvalues: ['public', 'confidential', 'web_application', 'native_application'],\n\t\tdefaultValue: 'public',\n\t})\n\tclientType: Date;\n\n\t@Column(DataType.STRING)\n\tredirectUri: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorFilter.html":{"url":"classes/OAuthErrorFilter.html","title":"class - OAuthErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/OAuthErrorFilter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: OAuthError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/OAuthErrorFilter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            OAuthError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { OAuthError } from 'oauth2-server'\n\n@Catch(OAuthError)\nexport class OAuthErrorFilter implements ExceptionFilter {\n\tcatch(exception: OAuthError, host: ArgumentsHost) {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response: Response = ctx.getResponse();\n\t\tconst request: Request = ctx.getRequest();\n\t\tresponse\n\t\t\t.status(exception.code)\n\t\t\t.json({\n\t\t\t\tstatusCode: exception.code,\n\t\t\t\ttimestamp: new Date().toISOString(),\n\t\t\t\tpath: request.url,\n\t\t\t\tmessage: exception.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseFormatInterceptor.html":{"url":"injectables/ResponseFormatInterceptor.html","title":"injectable - ResponseFormatInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResponseFormatInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/ResponseFormatInterceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interceptors/ResponseFormatInterceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ResponseFormatInterceptor implements NestInterceptor {\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tconsole.log('Before...', context.getHandler());\n\n\t\treturn next\n\t\t\t.handle()\n\t\t\t.pipe(\n\t\t\t\tmap((data) => {\n\t\t\t\t\treturn ({\n\t\t\t\t\t\tstatusCode: context.switchToHttp().getResponse().statusCode,\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpParameters.html":{"url":"classes/SignUpParameters.html","title":"class - SignUpParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Length(8, 255, {message: 'Password must bet at lest 8 characters long'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tBadRequestException,\n\tBody,\n\tController,\n\tDelete, Get,\n\tNotFoundException,\n\tPost, Req, Res, UnauthorizedException,\n} from '@nestjs/common';\nimport { UsersService } from '../user/user.service';\nimport { AuthService } from './auth.service';\nimport { IsEmail, IsNotEmpty, Length } from 'class-validator';\nimport * as OAuth2Server from 'oauth2-server';\nimport { oauth } from '../../lib/oauth';\n\nimport { Request, Response } from 'express';\n\nclass SignUpParameters{\n\t@IsEmail()\n\t@IsNotEmpty()\n\temail: string;\n\n\t@IsNotEmpty()\n\tfullName: string;\n\n\t@IsNotEmpty()\n\t@Length(8, 255, {message: \"Password must bet at lest 8 characters long\"})\n\tpassword: string;\n\n\t@IsNotEmpty()\n\tclientId: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n\tconstructor(private readonly userService: UsersService, private readonly authService: AuthService){}\n\n\n\t@Post('sign-up')\n\tasync signUp(@Body() signUpParameters: SignUpParameters){\n\t\tconst {\n\t\t\temail,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,\n\t\t} = signUpParameters;\n\t\tconsole.log(email,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,)\n\t\tconst client = await this.authService.getClient(clientId);\n\n\t\tif(!client){\n\t\t\tthrow new NotFoundException(null,'OAuth client not found')\n\t\t}\n\t\tconst user = await this.userService.getUserByEmail(email);\n\t\tif(user){\n\t\t\tthrow new BadRequestException(null, 'User already exists')\n\t\t}\n\t\tawait this.userService.create({email, fullName, passwordPlain: password});\n\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\tmessage: 'ok'\n\t\t};\n\t}\n\t@Post('sign-in')\n\tasync signIn(@Req() req: Request, @Res() res: Response){\n\n\t\tconst request = new OAuth2Server.Request(req);\n\t\tconst response = new OAuth2Server.Response(res);\n\n\t\tconst data = await oauth.token(request, response);\n\n\t\tres.status(200).send(data);\n\t}\n\t@Delete('sign-out')\n\tasync signOut(@Res() res: Response){\n\t\tawait this.authService.logout(res.locals.token.accessToken);\n\t\tres.status(200).send()\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Time.html":{"url":"classes/Time.html","title":"class - Time","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Time\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/times.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endTime\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                startTime\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: true, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, primaryKey: true, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ForeignKey(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BelongsTo, Column, DataType, ForeignKey, Model, Table } from 'sequelize-typescript';\nimport * as sequelize from 'sequelize';\nimport { User } from './user.model';\n\n@Table\nexport class Time extends Model {\n\t@Column({\n\t\ttype: DataType.UUID,\n\t\tprimaryKey: true,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t})\n\tid: string;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t\tallowNull: false,\n\t})\n\tstartTime: Date;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t\tallowNull: true,\n\t\tdefaultValue: null,\n\t})\n\tendTime: Date;\n\n\t@Column({\n\n\t})\n\tlabel: string;\n\n\t@ForeignKey(()=> User)\n\tuserId: string;\n\n\t@BelongsTo(() => User)\n\tuser: User;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TimeController.html":{"url":"controllers/TimeController.html","title":"controller - TimeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TimeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/time/time.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                time\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clockIn\n                            \n                            \n                                    Async\n                                clockOut\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clockIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clockIn(label: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/clock-in/:label')\n                \n            \n\n            \n                \n                    Defined in src/modules/time/time.controller.ts:29\n                \n            \n\n\n            \n                \n                    Start single activity e.g.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlabel or the name of the activity\n\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nresponse object used to get current authenticated user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clockOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clockOut(timerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/clock-out/:timerId')\n                \n            \n\n            \n                \n                    Defined in src/modules/time/time.controller.ts:52\n                \n            \n\n\n            \n                \n                    Finish single activity from the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid of the activity to finish\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n            \n                \n                    Defined in src/modules/time/time.controller.ts:16\n                \n            \n\n\n            \n                \n                    Get all tracked activities from one user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nresponse object used to get current authenticated user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Post, Res } from '@nestjs/common';\nimport { UsersService } from '../user/user.service';\nimport { TimeService } from './time.service';\nimport { Response } from 'express';\nimport moment = require('moment');\n\n@Controller('time')\nexport class TimeController {\n\tconstructor(private readonly userService: UsersService, private readonly timesService: TimeService){}\n\n\t/**\n\t * Get all tracked activities from one user\n\t * @param res - response object used to get current authenticated user\n\t */\n\t@Get('/')\n\tasync getAll(@Res() res: Response){\n\t\tconst userId = res.locals.token.user.id;\n\t\tconst data = await this.timesService.getTimesFromUserIdDescending(userId);\n\t\tconsole.log(data)\n\t\treturn res.send(data);\n\t}\n\n\t/**\n\t * Start single activity e.g.\n\t * @param label - label or the name of the activity\n\t * @param res - response object used to get current authenticated user\n\t */\n\t@Post('/clock-in/:label')\n\tasync clockIn(@Param('label') label: string, @Res() res: Response){\n\t\tconst startTime = moment().format('YYYY-MM-DDTHH:mm:ss.SSSZ');\n\t\tconst user = await this.userService.getUserByEmailWithStartTime(res.locals.token.user.email);\n\n\t\tif (user.times.length > 0) {\n\t\t\tthrow new BadRequestException(\"User is already clocked in\");\n\n\t\t}\n\t\tconst time = await this.timesService.create({\n\t\t\tstartTime: startTime,\n\t\t\tlabel: label,\n\t\t});\n\n\t\t// @ts-ignore\n\t\tawait user.addTime(time);\n\t\tres.status(200).send({success: true, time})\n\t}\n\n\t/**\n\t * Finish single activity from the user\n\t * @param timerId - id of the activity to finish\n\t */\n\t@Post('/clock-out/:timerId')\n\tasync clockOut(@Param('timerId') timerId: string){\n\t\tconst endTime = moment().format('YYYY-MM-DDTHH:mm:ss.SSSZ');\n\t\tconst time = await this.timesService.getTimeFromId(timerId);\n\n\t\tif(!time){\n\t\t\tthrow new BadRequestException('There is no such activity')\n\t\t}\n\t\tconst newTime = await time.update({endTime: endTime}, {where: {id: timerId}});\n\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\ttimerId: time.id,\n\t\t\tnewTime\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TimeModule.html":{"url":"modules/TimeModule.html","title":"module - TimeModule","body":"\n                   \n\n\n\n\n    Modules\n    TimeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TimeModule\n\n\n\ncluster_TimeModule_imports\n\n\n\ncluster_TimeModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nTimeModule\n\nTimeModule\n\nTimeModule -->\n\nUsersModule->TimeModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nTimeModule -->\n\nTimeService->TimeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/time/time.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TimeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TimeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/time/time.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { TimeService } from './time.service';\nimport { TimeController } from './time.controller';\nimport { UsersModule } from '../user/user.module';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from '../../shared/models/user.model';\nimport { Time } from '../../shared/models/times.model';\nimport { authenticateUser } from '../../shared/middleware/auth';\n\n@Module({\n\timports: [UsersModule, SequelizeModule.forFeature([Time])],\n\tproviders: [TimeService],\n\tcontrollers: [TimeController]\n})\nexport class TimeModule  implements NestModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer\n\t\t\t.apply(authenticateUser).forRoutes(TimeController)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/time/time.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getTimeFromId\n                            \n                            \n                                    Async\n                                getTimesFromUserIdDescending\n                            \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timeModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/time/time.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/time/time.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTimeFromId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeFromId(id)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/time/time.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTimesFromUserIdDescending\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimesFromUserIdDescending(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/time/time.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelCtor\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:4\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Time } from '../../shared/models/times.model';\nimport * as sequelize from 'sequelize';\nimport { BaseService } from '../../shared/services/base.service';\n\n@Injectable()\nexport class TimeService extends BaseService{\n\tconstructor(\n\t\t@InjectModel(Time)\n\t\tprivate timeModel: typeof Time,\n\t){\n\t\tsuper(timeModel)\n\t}\n\n\tasync create(data){\n\t\treturn this.timeModel.create(data);\n\t}\n\tasync getTimesFromUserIdDescending(userId) {\n\t\treturn this.timeModel.findAll({\n\t\t\twhere: {\n\t\t\t\tuserId: userId,\n\t\t\t\tendTime: {\n\t\t\t\t\t[sequelize.Op.ne] : null,\n\t\t\t\t}\n\t\t\t},\n\t\t\torder: [\n\t\t\t\t['startTime', 'DESC']\n\t\t\t]\n\t\t})\n\t}\n\tasync  getTimeFromId(id) {\n\t\treturn this.timeModel.findOne({\n\t\t\twhere: {\n\t\t\t\tid: id,\n\t\t\t}\n\t\t})\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValidPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    passwordPlain\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: false, validate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, primaryKey: true, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Time[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @HasMany(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:53\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidPassword\n                        \n                        \n                    \n                \n            \n            \n                \nisValidPassword(pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/user.model.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        passwordPlain\n                    \n                \n\n\n                \n                    \n                        setpasswordPlain(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/user.model.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Column, DataType, HasMany, Model, Table } from 'sequelize-typescript';\nimport * as bcrypt from 'bcrypt';\nimport * as sequelize from 'sequelize';\nimport { Time } from './times.model';\nimport { BadRequestException } from '@nestjs/common';\n@Table\nexport class User extends Model {\n\t@Column({\n\t\ttype: DataType.UUID,\n\t\tprimaryKey: true,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t})\n\tid: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tallowNull: false,\n\t})\n\temail: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tallowNull: false,\n\t\tvalidate: {\n\t\t\tlen: [1, 255],\n\t\t}\n\t})\n\tfullName: boolean;\n\n\tisValidPassword(pw: string): boolean{\n\t\treturn bcrypt.compareSync(pw, this.getDataValue('password'));\n\t}\n\n\t@Column({\n\t\ttype: DataType.VIRTUAL,\n\t\tvalidate: {\n\t\t\tlen: [8, 255],\n\t\t},\n\t})\n\tset passwordPlain(value: string){\n\t\tif(value.length  255){\n\t\t\tthrow new BadRequestException(\"Password must be at least 8 characters long\");\n\t\t}\n\t\tthis.setDataValue('password', bcrypt.hashSync(value, bcrypt.genSaltSync(10)));\n\t}\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t})\n\tpassword: string;\n\n\t@HasMany(()=> Time)\n\ttimes: Time[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('user')\nexport class UsersController {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from '../../shared/models/user.model';\nimport { UsersController } from './user.controller';\nimport { UsersService } from './user.service';\n\n@Module({\n\timports: [SequelizeModule.forFeature([User])],\n\tproviders: [UsersService],\n\tcontrollers: [UsersController],\n\texports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserByEmailWithStartTime\n                            \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByEmailWithStartTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmailWithStartTime(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelCtor\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:4\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from '../../shared/models/user.model';\nimport { Time } from '../../shared/models/times.model';\nimport { BaseService } from '../../shared/services/base.service';\n\n@Injectable()\nexport class UsersService extends BaseService{\n\tconstructor(\n\t\t@InjectModel(User)\n\t\tprivate userModel: typeof User,\n\t) {\n\t\tsuper(userModel);\n\t}\n\tasync getUserByEmail(email : string): Promise{\n\t\treturn this.userModel.findOne({\n\t\t\twhere: {\n\t\t\t\temail: email\n\t\t\t},\n\t\t})\n\t}\n\n\tasync getUserByEmailWithStartTime(email : string) : Promise {\n\t\treturn this.userModel.findOne({\n\t\t\twhere: {\n\t\t\t\temail: email\n\t\t\t},\n\t\t\tinclude:[{\n\t\t\t\tmodel: Time,\n\t\t\t\twhere: {\n\t\t\t\t\tendTime: null,\n\t\t\t\t},\n\t\t\t\trequired: false,\n\t\t\t}]\n\t\t})\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/oauth.ts\n            \n            variable\n            oauth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            class\n            SignUpParameters\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/time/time.controller.ts\n            \n            controller\n            TimeController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/time/time.service.ts\n            \n            injectable\n            TimeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/filters/HttpExceptionFilter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/filters/OAuthErrorFilter.ts\n            \n            class\n            OAuthErrorFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/ResponseFormatInterceptor.ts\n            \n            injectable\n            ResponseFormatInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/middleware/auth.ts\n            \n            function\n            authenticateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/models/oAuthAccessToken.model.ts\n            \n            class\n            OAuthAccessToken\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/shared/models/oAuthClient.model.ts\n            \n            class\n            OAuthClient\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/times.model.ts\n            \n            class\n            Time\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/services/auth.service.ts\n            \n            class\n            AuthService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/services/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/services/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.6\n        \n            @nestjs/core : ^7.0.6\n        \n            @nestjs/platform-express : ^7.0.6\n        \n            @nestjs/sequelize : ^0.1.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/oauth2-server : ^3.0.12\n        \n            @types/validator : ^12.0.1\n        \n            bcrypt : ^4.0.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.0-rc.0\n        \n            dotenv : ^8.2.0\n        \n            moment : ^2.24.0\n        \n            mysql2 : ^2.1.0\n        \n            oauth2-server : latest\n        \n            pg : ^7.18.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            sequelize : ^5.21.5\n        \n            sequelize-typescript : ^1.1.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authenticateUser   (src/.../auth.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/middleware/auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            authenticateUser\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticateUser(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TimeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_TimeModule\n\n\n\ncluster_TimeModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nTimeModule\n\nTimeModule\n\nAppModule -->\n\nTimeModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTimeModule -->\n\nUsersModule->TimeModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nTimeModule -->\n\nTimeService->TimeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (src/.../config.service.ts)\n                        \n                        \n                            oauth   (src/.../oauth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/services/config.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ConfigService(process.env)\n\t.ensureValues([\n\t\t'POSTGRES_HOST',\n\t\t'POSTGRES_PORT',\n\t\t'POSTGRES_USERNAME',\n\t\t'POSTGRES_PASSWORD',\n\t\t'POSTGRES_DATABASE',\n\t\t'POSTGRES_AUTO_LOAD_MODELS',\n\t\t'POSTGRES_SYNCRONIZE',\n\t])\n                        \n                    \n\n\n            \n        \n\n    src/lib/oauth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            oauth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OAuth2Server({\n\trefreshTokenLifetime: 60 * 3600,\n\tmodel: new AuthService(),\n\taccessTokenLifetime: 60 * 3600,\n\tallowBearerTokensInQueryString: true,\n\trequireClientAuthentication: {\n\t\tpassword: false,\n\t\trefresh_token: false,\n\t}\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
