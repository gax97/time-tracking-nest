var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.076,1,1.846]],["body/modules/AppModule.html",[0,1.744,1,3.599,2,1.443,3,1.443,4,1.792,5,1.792,6,1.443,7,2.371,8,1.792,9,2.68,10,2.68,11,3.021,12,0.04,13,3.021,14,2.703,15,2.371,16,1.792,17,1.443,18,0.367,19,0.367,20,0.257,21,3.256,22,2.67,23,0.64,24,0.625,25,4.306,26,3.256,27,4.306,28,3.256,29,3.256,30,2.018,31,1.302,32,3.256,33,3.256,34,1.792,35,3.256,36,3.256,37,3.256,38,1.443,39,0.367,40,0.122,41,0.021,42,0.028,43,0.021]],["title/controllers/AuthController.html",[44,1.467,45,1.639]],["body/controllers/AuthController.html",[12,0.04,17,1.811,18,0.222,19,0.222,20,0.155,23,0.543,24,0.379,38,0.874,39,0.222,40,0.137,41,0.013,42,0.019,43,0.013,44,0.972,45,1.658,46,1.394,47,1.624,48,1.973,49,0.258,50,0.722,51,2.26,52,3.011,53,3.011,54,3.011,55,1.973,56,2.657,57,3.161,58,2.675,59,1.618,60,3.365,61,0.548,62,1.973,63,3.82,64,0.955,65,0.786,66,0.786,67,0.478,68,0.786,69,0.648,70,2.889,71,3.279,72,2.876,73,0.876,74,1.973,75,2.479,76,1.973,77,1.973,78,3.085,79,3.365,80,1.973,81,1.223,82,1.624,83,1.624,84,1.624,85,1.394,86,1.088,87,1.223,88,1.46,89,1.394,90,2.479,91,3.624,92,1.624,93,1.394,94,1.394,95,1.223,96,1.223,97,1.223,98,1.624,99,0.972,100,1.867,101,1.207,102,2.889,103,1.624,104,1.394,105,1.867,106,2.423,107,1.624,108,1.624,109,1.394,110,1.394,111,1.394,112,2.264,113,1.624,114,0.874,115,1.204,116,2.128,117,1.394,118,1.811,119,1.624,120,2.056,121,1.624,122,2.128,123,2.728,124,1.624,125,1.624,126,1.658,127,1.477,128,1.624,129,1.624,130,1.624,131,1.624,132,1.624,133,1.394,134,1.624,135,1.624,136,1.394,137,0.645,138,1.394,139,0.789,140,1.624,141,1.624,142,1.624,143,1.624,144,0.874,145,1.624,146,1.624,147,1.624,148,1.624,149,1.624]],["title/modules/AuthModule.html",[0,1.076,11,1.639]],["body/modules/AuthModule.html",[0,1.675,2,1.332,3,1.332,4,1.655,5,1.655,6,1.332,7,2.552,8,1.655,11,3.072,12,0.04,15,2.247,16,1.655,17,1.809,18,0.339,19,0.339,20,0.237,22,1.864,23,0.637,24,0.577,30,1.864,31,1.202,38,1.809,39,0.339,40,0.113,41,0.019,42,0.026,43,0.019,45,2.552,50,0.721,61,0.451,64,0.577,65,0.647,66,0.647,67,0.393,68,0.647,73,0.721,86,1.938,87,1.864,88,2.144,89,2.125,150,2.475,151,2.475,152,3.007,153,2.475,154,3.361,155,4.094,156,3.007,157,3.361,158,1.655,159,3.361,160,3.007,161,3.007,162,2.012,163,2.475,164,1.864,165,2.475,166,1.864,167,2.247,168,2.475,169,2.475,170,1.481,171,3.007,172,3.007,173,3.007,174,3.007]],["title/injectables/AuthService.html",[88,1.191,175,1.076]],["body/injectables/AuthService.html",[12,0.04,18,0.305,19,0.305,20,0.213,23,0.564,24,0.52,31,1.083,39,0.305,40,0.102,41,0.018,42,0.025,43,0.018,49,0.354,50,0.911,51,2.301,61,0.658,64,0.913,65,0.944,66,0.944,67,0.497,68,0.944,69,0.817,73,0.911,88,1.519,101,1.533,112,2.719,114,1.683,115,1.754,118,1.683,120,1.2,122,3.361,123,1.678,137,1.241,162,1.871,163,2.229,166,1.678,167,2.091,168,2.229,175,1.372,176,1.49,177,2.229,178,3.798,179,5.192,180,2.229,181,4.387,182,4.387,183,2.707,184,3.127,185,3.798,186,2.707,187,3.127,188,1.871,189,2.161,190,3.361,191,3.798,192,2.707,193,4.123,194,3.798,195,1.914,196,2.229,197,2.719,198,2.707,199,2.707,200,2.707,201,3.798,202,2.707,203,2.229]],["title/classes/BaseService.html",[40,0.112,204,1.639]],["body/classes/BaseService.html",[12,0.039,18,0.388,19,0.388,20,0.272,23,0.388,39,0.388,40,0.13,41,0.022,42,0.029,43,0.022,49,0.451,50,1.072,51,2.199,61,0.744,65,0.961,66,0.961,67,0.585,68,0.961,73,0.826,114,1.527,115,1.984,118,1.527,137,1.126,144,1.981,204,2.46,205,1.126,206,2.837,207,1.787,208,2.269,209,3.254,210,4.47,211,3.94,212,4.47,213,3.159,214,3.446,215,2.771,216,1.527,217,1.698,218,3.446,219,3.446]],["title/classes/ConfigService.html",[34,1.639,40,0.112]],["body/classes/ConfigService.html",[12,0.04,18,0.27,19,0.27,20,0.189,23,0.27,34,2.476,39,0.27,40,0.09,41,0.015,42,0.023,43,0.015,49,0.313,50,0.835,61,0.748,65,0.882,66,0.882,67,0.625,68,0.882,73,1.146,101,1.632,106,1.319,114,1.062,115,1.639,120,1.816,126,1.319,127,1.258,137,1.561,139,1.993,197,1.485,205,0.783,220,1.693,221,4.601,222,3.374,223,4.498,224,4.498,225,3.48,226,4.498,227,2.396,228,3.48,229,2.396,230,2.865,231,3.48,232,2.396,233,2.396,234,2.396,235,2.396,236,4.099,237,3.48,238,4.498,239,2.396,240,1.972,241,3.18,242,2.396,243,2.396,244,1.972,245,2.396,246,2.396,247,2.396,248,1.972,249,2.396,250,1.916,251,2.396,252,2.396,253,2.396,254,2.396,255,2.396,256,2.396,257,2.396,258,2.396,259,2.865,260,2.396,261,1.319,262,2.396,263,2.396,264,2.396,265,1.693,266,2.396,267,2.396,268,2.396,269,2.396,270,2.396,271,2.396,272,2.396,273,2.396,274,2.396,275,2.396,276,2.396,277,2.396,278,1.972,279,1.972,280,1.972,281,1.972,282,1.972,283,1.972,284,1.972,285,1.972]],["title/classes/HttpExceptionFilter.html",[40,0.112,286,2.105]],["body/classes/HttpExceptionFilter.html",[12,0.039,18,0.367,19,0.367,20,0.257,23,0.485,24,0.625,39,0.367,40,0.122,41,0.021,42,0.028,43,0.021,49,0.426,50,1.033,56,2.656,58,2.53,61,0.488,65,0.7,66,0.7,67,0.426,68,0.7,69,0.7,73,0.781,99,1.604,105,2.018,120,2.276,127,1.177,158,1.792,170,2.122,205,1.064,265,3.411,286,3.044,287,2.68,288,3.973,289,3.545,290,4.306,291,3.973,292,3.973,293,3.545,294,5.135,295,4.228,296,3.256,297,3.256,298,2.68,299,2.68,300,2.68,301,2.68,302,4.306,303,3.256,304,3.256,305,3.256,306,2.68,307,2.301,308,2.68,309,2.68,310,2.68,311,2.68,312,2.68,313,2.68,314,2.68]],["title/classes/OAuthAccessToken.html",[40,0.112,167,1.639]],["body/classes/OAuthAccessToken.html",[12,0.04,18,0.294,19,0.294,20,0.206,23,0.485,39,0.294,40,0.098,41,0.017,42,0.024,43,0.017,49,0.612,59,2.39,61,0.809,64,1.068,67,0.743,69,0.562,101,1.593,112,2.668,162,2.657,167,2.04,188,1.825,203,4.069,205,0.854,207,1.482,208,1.721,216,1.158,217,1.288,250,2.04,315,2.152,316,2.297,317,3.05,318,1.825,319,4.304,320,4.304,321,4.304,322,2.668,323,2.902,324,3.705,325,2.614,326,3.31,327,2.614,328,3.05,329,2.614,330,3.05,331,2.614,332,2.614,333,2.614,334,2.614,335,2.614,336,3.064,337,1.62,338,2.04,339,3.543,340,3.543,341,2.152,342,2.614,343,2.619,344,3.05]],["title/classes/OAuthClient.html",[40,0.112,162,1.467]],["body/classes/OAuthClient.html",[12,0.039,18,0.314,19,0.314,20,0.22,23,0.437,39,0.314,40,0.105,41,0.018,42,0.025,43,0.018,49,0.365,59,2.245,61,0.76,67,0.728,69,0.601,101,1.548,139,1.927,162,2.375,189,2.198,205,0.913,207,1.552,208,1.784,216,1.977,217,1.376,221,3.672,250,2.96,316,2.406,318,1.912,323,2.988,326,3.407,336,3.14,337,1.731,338,2.137,343,2.743,345,2.299,346,3.881,347,3.881,348,3.881,349,3.195,350,4.461,351,4.461,352,4.461,353,4.461,354,3.706,355,2.793,356,3.881,357,2.793,358,2.793,359,2.743,360,3.881,361,2.793,362,3.881,363,2.793,364,2.743,365,2.793,366,2.793,367,2.793,368,2.793,369,2.793]],["title/classes/OAuthErrorFilter.html",[40,0.112,370,2.105]],["body/classes/OAuthErrorFilter.html",[12,0.039,18,0.342,19,0.342,20,0.24,23,0.525,24,0.584,39,0.342,40,0.114,41,0.02,42,0.027,43,0.02,49,0.398,50,0.987,56,2.567,58,2.462,61,0.456,64,0.959,65,0.654,66,0.654,67,0.398,68,0.654,69,0.654,73,0.729,95,1.885,96,1.885,99,1.498,105,1.885,120,2.067,127,1.099,158,1.674,170,2.027,205,0.994,265,3.296,288,3.839,289,3.387,291,3.839,292,3.839,293,3.387,295,4.113,298,2.504,299,2.504,300,2.504,301,2.504,306,2.504,307,2.15,308,2.504,309,2.504,310,2.504,311,2.504,312,2.504,313,2.504,314,2.504,370,2.908,371,2.504,372,4.114,373,4.114,374,4.114,375,4.996,376,3.387,377,4.114,378,4.114,379,4.114,380,4.114,381,4.996,382,3.041,383,3.041,384,3.041,385,3.041]],["title/injectables/ResponseFormatInterceptor.html",[175,1.076,386,2.105]],["body/injectables/ResponseFormatInterceptor.html",[12,0.04,18,0.379,19,0.379,20,0.266,23,0.553,24,0.647,39,0.379,40,0.127,41,0.022,42,0.028,43,0.022,49,0.441,50,1.056,61,0.505,65,0.725,66,0.725,67,0.441,68,0.725,69,0.725,73,0.808,137,1.439,144,1.952,170,1.66,175,1.592,176,1.855,307,2.382,386,3.114,387,2.774,388,4.405,389,4.405,390,4.405,391,4.405,392,4.405,393,4.405,394,5.204,395,4.285,396,5.204,397,3.369,398,3.369,399,4.907,400,4.405,401,2.774,402,3.369,403,3.369,404,3.369,405,3.369,406,3.369,407,3.369,408,3.369,409,3.369]],["title/classes/SignUpParameters.html",[40,0.112,78,1.846]],["body/classes/SignUpParameters.html",[12,0.04,17,1.415,18,0.24,19,0.24,20,0.168,23,0.558,24,0.409,39,0.24,40,0.144,41,0.014,42,0.021,43,0.014,44,1.05,45,1.173,46,1.506,49,0.279,51,1.696,56,2.34,57,2.962,58,2.441,59,1.884,60,2.628,61,0.638,63,3.151,64,0.874,67,0.556,70,2.706,71,2.706,72,2.373,75,1.754,78,2.962,79,2.628,81,1.321,82,1.754,83,1.754,84,1.754,85,1.506,86,1.154,87,1.321,88,1.531,89,1.506,90,2.628,91,4.079,92,1.754,93,1.506,94,1.506,95,1.321,96,1.321,97,1.321,98,1.754,99,1.05,100,2.635,101,1.505,102,3.378,103,1.754,104,2.256,105,2.373,106,2.805,107,2.628,108,2.628,109,2.256,110,2.256,111,2.256,112,2.822,113,1.754,114,0.944,115,1.277,116,2.256,117,1.506,118,1.884,119,1.754,120,2.118,121,1.754,122,2.256,123,2.822,124,1.754,125,1.754,126,1.757,127,1.536,128,1.754,129,1.754,130,1.754,131,1.754,132,1.754,133,1.506,134,1.754,135,1.754,136,1.506,137,0.696,138,1.506,139,0.852,140,1.754,141,1.754,142,1.754,143,1.754,144,0.944,145,1.754,146,1.754,147,1.754,148,1.754,149,1.754,205,0.696,207,1.277,410,2.131,411,2.131,412,2.131,413,2.131,414,2.131,415,2.131]],["title/classes/Time.html",[40,0.112,416,1.191]],["body/classes/Time.html",[12,0.039,18,0.305,19,0.305,20,0.213,23,0.494,39,0.305,40,0.102,41,0.018,42,0.025,43,0.018,49,0.354,59,2.301,61,0.779,64,1.076,67,0.723,69,0.582,101,1.533,139,1.902,188,2.343,189,2.161,205,0.885,207,1.519,208,1.754,216,1.944,217,1.334,250,2.757,261,2.091,316,2.354,317,3.127,318,1.871,322,2.719,323,2.719,326,3.361,328,2.229,330,2.229,336,3.218,337,1.678,338,2.091,339,3.127,340,3.127,341,2.229,344,3.127,354,3.361,359,2.685,364,1.914,416,1.519,417,2.229,418,2.354,419,2.719,420,3.611,421,3.101,422,3.915,423,2.707,424,2.707,425,2.707,426,2.707,427,2.707,428,2.707,429,2.229,430,1.914]],["title/controllers/TimeController.html",[44,1.467,431,1.846]],["body/controllers/TimeController.html",[12,0.04,18,0.225,19,0.225,20,0.158,23,0.498,24,0.384,38,0.886,39,0.225,40,0.075,41,0.013,42,0.02,43,0.013,44,0.985,47,1.645,49,0.261,50,0.729,51,2.268,57,3.173,58,2.614,59,1.632,61,0.552,64,0.983,65,0.792,66,0.952,67,0.482,68,0.792,69,0.792,72,2.551,73,0.883,81,1.239,85,1.413,86,1.099,87,1.239,99,0.985,101,1.377,115,0.799,116,2.15,117,1.413,118,1.962,120,2.214,123,2.891,126,1.674,127,1.099,133,1.413,137,0.994,138,1.413,139,1.216,144,0.886,188,2.027,189,1.814,248,1.645,322,1.239,416,1.645,418,3.173,419,1.885,420,3.991,421,2.602,431,1.885,432,1.645,433,3.041,434,3.041,435,3.041,436,1.999,437,4.115,438,3.041,439,1.999,440,2.504,441,4.115,442,4.115,443,4.115,444,1.999,445,3.041,446,1.999,447,4.115,448,4.427,449,1.999,450,1.999,451,3.041,452,2.15,453,3.041,454,1.498,455,1.645,456,1.645,457,1.999,458,1.999,459,1.999,460,1.999,461,1.999,462,1.999,463,1.999,464,1.999,465,3.041,466,3.041,467,3.041,468,1.999,469,1.999,470,1.645,471,1.999,472,1.999,473,1.999,474,1.999,475,1.999,476,1.999,477,1.999,478,1.999,479,1.999,480,1.999,481,1.999,482,1.999,483,3.041,484,1.999,485,1.999]],["title/modules/TimeModule.html",[0,1.076,13,1.639]],["body/modules/TimeModule.html",[0,1.713,2,1.392,3,1.392,4,1.729,5,1.729,6,1.392,7,2.609,8,1.729,12,0.04,13,3.103,14,2.676,15,2.314,16,1.729,17,1.392,18,0.354,19,0.354,20,0.247,22,2.606,23,0.624,24,0.603,30,1.947,31,1.256,38,1.863,39,0.354,40,0.118,41,0.02,42,0.027,43,0.02,50,0.753,61,0.471,65,0.675,66,0.675,67,0.411,68,0.675,73,0.753,153,2.585,154,3.461,155,4.167,157,3.461,158,1.729,159,3.461,164,1.947,165,2.585,170,1.547,416,1.256,431,2.938,454,2.676,455,2.585,486,2.585,487,3.14,488,2.585,489,3.14,490,3.14,491,3.14,492,3.14,493,2.22,494,3.14,495,3.14]],["title/injectables/TimeService.html",[175,1.076,454,1.467]],["body/injectables/TimeService.html",[12,0.04,18,0.282,19,0.282,20,0.197,23,0.547,24,0.481,31,1.001,39,0.282,40,0.094,41,0.016,42,0.023,43,0.016,49,0.327,50,0.861,51,2.363,61,0.729,64,0.882,65,0.987,66,0.987,67,0.47,68,0.987,69,0.773,73,1.008,101,1.241,114,1.592,115,1.68,118,1.592,137,1.174,144,1.109,175,1.298,176,1.378,187,3.78,189,2.627,190,3.245,195,1.769,197,1.552,204,2.676,207,1.436,208,1.68,209,2.605,211,1.769,213,1.769,215,1.552,216,1.592,318,1.77,322,2.846,416,1.436,418,2.227,419,1.552,421,1.769,430,1.769,452,2.539,454,1.77,493,1.769,496,2.061,497,3.592,498,3.592,499,2.503,500,2.503,501,3.592,502,3.592,503,2.503,504,3.592,505,3.592,506,3.592,507,2.503,508,3.592,509,3.592,510,2.957,511,2.061,512,2.061,513,2.061,514,2.503,515,2.503,516,2.503,517,2.503,518,2.503,519,2.503,520,2.503]],["title/classes/User.html",[40,0.112,64,0.572]],["body/classes/User.html",[12,0.039,18,0.263,19,0.263,20,0.184,23,0.532,24,0.448,39,0.263,40,0.088,41,0.015,42,0.022,43,0.015,49,0.305,50,0.818,59,2.095,61,0.765,64,0.853,65,0.734,66,0.734,67,0.727,68,0.734,69,0.502,73,0.818,81,1.446,100,2.502,101,1.642,102,2.853,104,2.853,106,2.222,109,2.413,110,1.649,111,1.649,126,1.284,127,0.843,136,2.413,137,0.762,139,1.365,158,1.284,188,1.682,189,1.989,205,0.762,207,1.365,208,1.614,216,1.789,217,1.149,241,1.649,244,3.657,250,2.718,261,2.445,316,2.116,318,1.682,323,2.754,336,3.061,337,1.446,338,1.879,343,2.853,354,2.413,359,2.413,364,1.649,416,1.776,422,3.657,429,1.92,521,1.92,522,4.036,523,3.413,524,3.413,525,2.333,526,4.036,527,2.333,528,2.333,529,2.333,530,2.333,531,2.333,532,3.413,533,2.333,534,2.333,535,2.333,536,2.333,537,3.413,538,2.81,539,2.333,540,3.413,541,2.333,542,2.333,543,2.333,544,2.333,545,2.333,546,2.333,547,2.333,548,2.333,549,2.333,550,2.333,551,2.333]],["title/modules/UsersModule.html",[0,1.076,14,1.467]],["body/modules/UsersModule.html",[0,1.815,2,1.568,3,1.568,4,1.948,5,1.948,6,1.568,7,2.765,8,2.765,12,0.039,14,2.813,15,2.503,16,1.948,17,1.568,18,0.398,19,0.398,20,0.279,22,2.193,23,0.617,24,0.679,30,2.193,31,1.415,38,1.568,39,0.398,40,0.133,41,0.023,42,0.029,43,0.023,64,0.679,86,2.155,166,2.193,169,2.913,552,2.913,553,2.913,554,3.538,555,3.538,556,4.546,557,3.538,558,3.538]],["title/injectables/UsersService.html",[86,1.076,175,1.076]],["body/injectables/UsersService.html",[12,0.04,18,0.273,19,0.273,20,0.191,23,0.54,24,0.465,31,0.969,39,0.273,40,0.091,41,0.016,42,0.023,43,0.016,49,0.317,50,0.841,51,2.342,61,0.72,64,1.05,65,0.973,66,0.973,67,0.54,68,0.973,69,0.755,73,0.989,86,1.268,100,3.579,101,1.478,114,1.555,115,1.65,118,1.555,137,1.147,144,1.074,166,1.502,175,1.268,176,1.334,180,1.995,184,2.889,188,2.228,190,3.197,195,1.713,196,1.995,197,1.502,204,2.642,207,1.403,208,1.808,209,2.557,211,1.713,213,1.713,215,1.502,261,1.334,318,1.729,416,1.403,418,2.175,419,1.502,430,1.713,493,1.713,510,2.889,511,1.995,512,1.995,513,1.995,559,1.995,560,3.509,561,3.509,562,2.423,563,3.509,564,2.423,565,4.522,566,3.509,567,3.509,568,2.423,569,3.509,570,3.509,571,2.423,572,3.509,573,2.423,574,2.423]],["title/coverage.html",[575,2.867]],["body/coverage.html",[6,1.336,12,0.039,20,0.238,34,2.252,40,0.215,41,0.019,42,0.026,43,0.019,44,2.015,45,1.66,46,2.891,64,0.579,67,0.394,78,1.869,86,1.09,88,1.636,97,1.869,127,1.09,162,1.486,164,1.869,167,1.66,175,1.799,177,2.482,204,1.66,206,2.482,220,2.891,286,2.131,287,2.482,315,2.482,338,1.66,345,2.482,370,2.131,371,2.482,386,2.131,387,2.482,416,1.206,417,2.482,431,1.869,432,2.482,454,1.486,470,4.099,496,2.482,521,2.482,559,2.482,575,2.131,576,2.482,577,3.015,578,3.015,579,2.482,580,4.091,581,4.091,582,4.091,583,2.482,584,3.368,585,4.091,586,4.091,587,4.091,588,3.015,589,5.367,590,3.015,591,4.091,592,4.643,593,2.482,594,3.015,595,3.015,596,3.015,597,3.015,598,4.091,599,4.091,600,3.015,601,3.015,602,3.015,603,3.015,604,3.015,605,3.015,606,3.015]],["title/dependencies.html",[3,1.586,607,2.49]],["body/dependencies.html",[3,1.611,12,0.04,24,0.698,31,1.453,40,0.174,41,0.024,42,0.03,43,0.024,93,2.569,95,2.253,96,2.867,99,1.791,216,2.05,217,1.791,401,2.992,456,2.992,538,2.992,608,5.088,609,3.635,610,3.635,611,3.635,612,3.635,613,3.635,614,3.635,615,3.635,616,3.635,617,3.635,618,3.635,619,3.635,620,3.635,621,3.635,622,3.635,623,3.635,624,3.635,625,3.635,626,3.635,627,3.635,628,3.635,629,3.635,630,3.635,631,3.635,632,3.635,633,3.635,634,3.635,635,3.635,636,3.635,637,3.635,638,3.635]],["title/miscellaneous/functions.html",[639,1.544,640,2.946]],["body/miscellaneous/functions.html",[6,2.368,12,0.035,41,0.026,42,0.032,43,0.026,49,0.53,56,2.23,57,3.068,58,1.996,65,0.871,66,0.871,68,0.871,69,0.871,70,2.864,71,3.498,72,3.068,164,3.068,193,4.074,376,4.074,395,4.4,583,3.335,584,3.335,593,3.335,639,2.511,640,3.335,641,4.051,642,4.051,643,4.051,644,4.949,645,4.051,646,4.051]],["title/index.html",[49,0.326,647,2.49,648,2.49]],["body/index.html",[12,0.039,20,0.273,41,0.022,42,0.029,43,0.022,64,0.666,69,0.746,170,1.709,209,2.15,230,2.855,259,3.695,349,2.855,440,2.855,452,2.452,575,2.452,576,3.695,649,3.468,650,3.468,651,3.468,652,3.468,653,3.468,654,3.468,655,3.468,656,3.468,657,3.468,658,3.468,659,3.468,660,3.468,661,3.468,662,4.489,663,3.468,664,3.468,665,5.759,666,3.468,667,3.468,668,3.468,669,3.468,670,3.468,671,3.468,672,5.682,673,3.468,674,3.468,675,3.468,676,3.468,677,3.468,678,3.468,679,3.468,680,3.468,681,3.468,682,3.468,683,4.489,684,4.489,685,3.468,686,3.468,687,3.468]],["title/modules.html",[2,1.797]],["body/modules.html",[1,2.697,2,1.928,11,2.395,12,0.033,13,2.395,14,2.143,41,0.028,42,0.033,43,0.028,688,5.701,689,5.701,690,5.701,691,5.701]],["title/overview.html",[692,3.339]],["body/overview.html",[0,1.266,1,3.577,2,1.552,3,1.552,4,1.928,5,1.928,6,1.552,7,1.928,8,1.928,9,2.884,10,2.884,11,3.135,12,0.038,13,3.135,14,2.806,15,2.487,16,1.928,17,1.552,38,1.552,41,0.023,42,0.029,43,0.023,86,2.085,88,1.999,150,2.884,151,2.884,176,1.928,205,1.145,454,2.463,486,2.884,488,2.884,552,2.884,553,2.884,692,2.884,693,4.517,694,3.503,695,3.503]],["title/miscellaneous/variables.html",[639,1.544,696,2.946]],["body/miscellaneous/variables.html",[12,0.039,34,2.638,41,0.025,42,0.031,43,0.025,49,0.503,88,1.538,94,3.388,97,2.971,106,2.117,127,1.887,139,1.538,208,1.538,215,2.384,220,2.718,222,3.166,240,3.946,241,3.388,261,2.638,278,3.166,279,3.166,280,3.166,281,3.166,282,3.166,283,3.166,284,3.166,285,3.166,579,3.166,639,2.384,696,3.166,697,3.846,698,3.846,699,3.846,700,4.793,701,4.793,702,3.846,703,3.846,704,3.846,705,3.846]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":470,"title":{},"body":{"controllers/TimeController.html":{},"coverage.html":{}}}],["0.1.0",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":541,"title":{},"body":{"classes/User.html":{}}}],["1.1.0",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":695,"title":{},"body":{"overview.html":{}}}],["100",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["12.0.1",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":694,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["3.0.0",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["3.0.12",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":693,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["5.21.5",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["6.5.4",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.6",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["7.18.2",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["8.2.0",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":348,"title":{},"body":{"classes/OAuthClient.html":{}}}],["accessors",{"_index":524,"title":{},"body":{"classes/User.html":{}}}],["accesstoken",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{}}}],["accesstokenexpiresat",{"_index":319,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["accesstokenlifetime",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":452,"title":{},"body":{"controllers/TimeController.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["activity",{"_index":418,"title":{},"body":{"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["address",{"_index":566,"title":{},"body":{"injectables/UsersService.html":{}}}],["allowbearertokensinquerystring",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allownull",{"_index":422,"title":{},"body":{"classes/Time.html":{},"classes/User.html":{}}}],["along",{"_index":657,"title":{},"body":{"index.html":{}}}],["already",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["api",{"_index":349,"title":{},"body":{"classes/OAuthClient.html":{},"index.html":{}}}],["app",{"_index":676,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["apply(authenticateuser).forroutes(timecontroller",{"_index":495,"title":{},"body":{"modules/TimeModule.html":{}}}],["apply(authenticateuser).forroutes({path",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["argumentshost",{"_index":295,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["async",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{}}}],["auth/sign",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":45,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"coverage.html":{}}}],["authenticated",{"_index":443,"title":{},"body":{"controllers/TimeController.html":{}}}],["authenticateuser",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticateuser(req",{"_index":643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authentication",{"_index":656,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":651,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":88,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/SignUpParameters.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["autoloadmodels",{"_index":274,"title":{},"body":{"classes/ConfigService.html":{}}}],["await",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["badrequestexception",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"classes/User.html":{}}}],["badrequestexception(\"password",{"_index":548,"title":{},"body":{"classes/User.html":{}}}],["badrequestexception(\"user",{"_index":471,"title":{},"body":{"controllers/TimeController.html":{}}}],["badrequestexception('there",{"_index":481,"title":{},"body":{"controllers/TimeController.html":{}}}],["badrequestexception(null",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["baseservice",{"_index":204,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["baseservice:15",{"_index":511,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["baseservice:5",{"_index":512,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["bcrypt",{"_index":538,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.comparesync(pw",{"_index":542,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.gensaltsync(10",{"_index":551,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hashsync(value",{"_index":550,"title":{},"body":{"classes/User.html":{}}}],["belongs",{"_index":317,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["belongsto",{"_index":339,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["belongsto(undefined",{"_index":330,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["bet",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["body",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["boolean",{"_index":244,"title":{},"body":{"classes/ConfigService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":691,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":688,"title":{},"body":{"modules.html":{}}}],["call",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callhandler",{"_index":396,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["catch",{"_index":292,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["catch(exception",{"_index":293,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["catch(httpexception",{"_index":297,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(oautherror",{"_index":383,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["characters",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["check",{"_index":668,"title":{},"body":{"index.html":{}}}],["class",{"_index":40,"title":{"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpParameters.html":{}}}],["clientid",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"classes/SignUpParameters.html":{}}}],["clientmodel",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["clients",{"_index":347,"title":{},"body":{"classes/OAuthClient.html":{}}}],["clientsecret",{"_index":350,"title":{},"body":{"classes/OAuthClient.html":{}}}],["clienttype",{"_index":351,"title":{},"body":{"classes/OAuthClient.html":{}}}],["clocked",{"_index":472,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockin",{"_index":433,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockin(@param('label",{"_index":464,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockin(label",{"_index":436,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockout",{"_index":434,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockout(@param('timerid",{"_index":478,"title":{},"body":{"controllers/TimeController.html":{}}}],["clockout(timerid",{"_index":444,"title":{},"body":{"controllers/TimeController.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_timemodule",{"_index":486,"title":{},"body":{"modules/TimeModule.html":{},"overview.html":{}}}],["cluster_timemodule_imports",{"_index":487,"title":{},"body":{"modules/TimeModule.html":{}}}],["cluster_timemodule_providers",{"_index":488,"title":{},"body":{"modules/TimeModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":552,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":553,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":554,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":336,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["column(datatype.string",{"_index":362,"title":{},"body":{"classes/OAuthClient.html":{}}}],["column({type",{"_index":323,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["confidential",{"_index":367,"title":{},"body":{"classes/OAuthClient.html":{}}}],["config.service.ts",{"_index":669,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":34,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env",{"_index":278,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configservice.getpostgresconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["configure(consumer",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["consistent",{"_index":389,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["console.log('before",{"_index":404,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["console.log(email",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["console.log(exception",{"_index":304,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["const",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["constructor",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["constructor(env",{"_index":227,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(model",{"_index":210,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(private",{"_index":248,"title":{},"body":{"classes/ConfigService.html":{},"controllers/TimeController.html":{}}}],["constructor(timemodel",{"_index":499,"title":{},"body":{"injectables/TimeService.html":{}}}],["constructor(usermodel",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["consumer",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["context",{"_index":398,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["context.gethandler",{"_index":405,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":409,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["controller",{"_index":44,"title":{"controllers/AuthController.html":{},"controllers/TimeController.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["controller('time",{"_index":458,"title":{},"body":{"controllers/TimeController.html":{}}}],["controllers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":575,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":209,"title":{},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(data",{"_index":213,"title":{},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["creation",{"_index":377,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["crud",{"_index":658,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":298,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["ctx.getrequest",{"_index":301,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["ctx.getresponse",{"_index":300,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["current",{"_index":442,"title":{},"body":{"controllers/TimeController.html":{}}}],["currently",{"_index":569,"title":{},"body":{"injectables/UsersService.html":{}}}],["danilo",{"_index":652,"title":{},"body":{"index.html":{}}}],["data",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":272,"title":{},"body":{"classes/ConfigService.html":{}}}],["datatype",{"_index":337,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["datatype.array(datatype.string",{"_index":365,"title":{},"body":{"classes/OAuthClient.html":{}}}],["datatype.date",{"_index":344,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["datatype.enum",{"_index":366,"title":{},"body":{"classes/OAuthClient.html":{}}}],["datatype.string",{"_index":343,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/User.html":{}}}],["datatype.uuid",{"_index":429,"title":{},"body":{"classes/Time.html":{},"classes/User.html":{}}}],["datatype.virtual",{"_index":544,"title":{},"body":{"classes/User.html":{}}}],["date",{"_index":326,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{}}}],["date().toisostring",{"_index":309,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["ddthh:mm:ss.sssz",{"_index":467,"title":{},"body":{"controllers/TimeController.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"classes/User.html":{}}}],["default",{"_index":240,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":354,"title":{},"body":{"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["defined",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["delete('sign",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["deletedtokens",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["deletion",{"_index":378,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":519,"title":{},"body":{"injectables/TimeService.html":{}}}],["descending",{"_index":509,"title":{},"body":{"injectables/TimeService.html":{}}}],["description",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["destroyed",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev",{"_index":262,"title":{},"body":{"classes/ConfigService.html":{}}}],["development",{"_index":677,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":263,"title":{},"body":{"classes/ConfigService.html":{}}}],["docdocumentation",{"_index":673,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":576,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["during",{"_index":375,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["e2e",{"_index":685,"title":{},"body":{"index.html":{}}}],["email",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["endtime",{"_index":419,"title":{},"body":{"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["ensurevalues",{"_index":222,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["ensurevalues(keys",{"_index":231,"title":{},"body":{"classes/ConfigService.html":{}}}],["env",{"_index":230,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["env.${key",{"_index":255,"title":{},"body":{"classes/ConfigService.html":{}}}],["error",{"_index":253,"title":{},"body":{"classes/ConfigService.html":{}}}],["error(`config",{"_index":252,"title":{},"body":{"classes/ConfigService.html":{}}}],["errors",{"_index":373,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["exception",{"_index":288,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["exception.code",{"_index":385,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["exception.getstatus",{"_index":303,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":312,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["exception.stack",{"_index":314,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["exceptionfilter",{"_index":291,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["executioncontext",{"_index":394,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["exists",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["export",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"dependencies.html":{}}}],["extends",{"_index":318,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":261,"title":{},"body":{"classes/ConfigService.html":{},"classes/Time.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":667,"title":{},"body":{"index.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":289,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["find",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TimeService.html":{}}}],["finish",{"_index":447,"title":{},"body":{"controllers/TimeController.html":{}}}],["foreignkey",{"_index":340,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["foreignkey(undefined",{"_index":328,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["formatting",{"_index":390,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["found",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["fullname",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["function",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":640,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gačevi",{"_index":653,"title":{},"body":{"index.html":{}}}],["generate",{"_index":671,"title":{},"body":{"index.html":{}}}],["getall",{"_index":435,"title":{},"body":{"controllers/TimeController.html":{}}}],["getall(@res",{"_index":460,"title":{},"body":{"controllers/TimeController.html":{}}}],["getall(res",{"_index":449,"title":{},"body":{"controllers/TimeController.html":{}}}],["getclient",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["getclient(clientid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["getport",{"_index":223,"title":{},"body":{"classes/ConfigService.html":{}}}],["getpostgresconfig",{"_index":224,"title":{},"body":{"classes/ConfigService.html":{}}}],["gettimefromid",{"_index":497,"title":{},"body":{"injectables/TimeService.html":{}}}],["gettimefromid(id",{"_index":502,"title":{},"body":{"injectables/TimeService.html":{}}}],["gettimesfromuseriddescending",{"_index":498,"title":{},"body":{"injectables/TimeService.html":{}}}],["gettimesfromuseriddescending(userid",{"_index":506,"title":{},"body":{"injectables/TimeService.html":{}}}],["getting",{"_index":647,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":560,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemail(email",{"_index":563,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemailwithstarttime",{"_index":561,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemailwithstarttime(email",{"_index":567,"title":{},"body":{"injectables/UsersService.html":{}}}],["getvalue",{"_index":225,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":237,"title":{},"body":{"classes/ConfigService.html":{}}}],["grants",{"_index":352,"title":{},"body":{"classes/OAuthClient.html":{}}}],["handle",{"_index":406,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["happen",{"_index":374,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["hasmany",{"_index":537,"title":{},"body":{"classes/User.html":{}}}],["hasmany(undefined",{"_index":530,"title":{},"body":{"classes/User.html":{}}}],["help",{"_index":670,"title":{},"body":{"index.html":{}}}],["host",{"_index":265,"title":{},"body":{"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["host.switchtohttp",{"_index":299,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["http",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"miscellaneous/functions.html":{}}}],["httperror",{"_index":290,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":294,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":286,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["id",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{}}}],["identifier",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["if(!client",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["if(!time",{"_index":480,"title":{},"body":{"controllers/TimeController.html":{}}}],["if(user",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["if(value.length",{"_index":547,"title":{},"body":{"classes/User.html":{}}}],["ignore",{"_index":475,"title":{},"body":{"controllers/TimeController.html":{}}}],["implements",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"modules/TimeModule.html":{},"index.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{}}}],["in/:label",{"_index":438,"title":{},"body":{"controllers/TimeController.html":{}}}],["include",{"_index":573,"title":{},"body":{"injectables/UsersService.html":{}}}],["index",{"_index":49,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":380,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["inherited",{"_index":510,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":175,"title":{"injectables/AuthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResponseFormatInterceptor.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(oauthaccesstoken",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(oauthclient",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(time",{"_index":514,"title":{},"body":{"injectables/TimeService.html":{}}}],["injectmodel(user",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":662,"title":{},"body":{"index.html":{}}}],["installation",{"_index":661,"title":{},"body":{"index.html":{}}}],["instance",{"_index":215,"title":{},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":392,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["intercept(context",{"_index":393,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["interceptor",{"_index":388,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["isemail",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["isemail()@isnotempty",{"_index":411,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["isnotempty",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["isnotempty()@length(8",{"_index":414,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["isproduction",{"_index":226,"title":{},"body":{"classes/ConfigService.html":{}}}],["isvalidpassword",{"_index":523,"title":{},"body":{"classes/User.html":{}}}],["isvalidpassword(pw",{"_index":532,"title":{},"body":{"classes/User.html":{}}}],["json",{"_index":306,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["k",{"_index":249,"title":{},"body":{"classes/ConfigService.html":{}}}],["key",{"_index":242,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":233,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":256,"title":{},"body":{"classes/ConfigService.html":{}}}],["label",{"_index":420,"title":{},"body":{"classes/Time.html":{},"controllers/TimeController.html":{}}}],["latest",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["len",{"_index":540,"title":{},"body":{"classes/User.html":{}}}],["length",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["length(8",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["lest",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["lib/oauth",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["literal",{"_index":228,"title":{},"body":{"classes/ConfigService.html":{}}}],["logout",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(token",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["map",{"_index":402,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["map((data",{"_index":408,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["matching",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{}}}],["metadata",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["methods",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["middleware",{"_index":644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["middlewareconsumer",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["miscellaneous",{"_index":639,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":254,"title":{},"body":{"classes/ConfigService.html":{}}}],["mm",{"_index":466,"title":{},"body":{"controllers/TimeController.html":{}}}],["mode",{"_index":259,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["model",{"_index":208,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["modelctor",{"_index":211,"title":{},"body":{"classes/BaseService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/time/time.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":456,"title":{},"body":{"controllers/TimeController.html":{},"dependencies.html":{}}}],["moment().format('yyyy",{"_index":465,"title":{},"body":{"controllers/TimeController.html":{}}}],["mysql2",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["native_application",{"_index":369,"title":{},"body":{"classes/OAuthClient.html":{}}}],["necessary",{"_index":666,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":400,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/sequelize/dist/interfaces/sequelize",{"_index":245,"title":{},"body":{"classes/ConfigService.html":{}}}],["nestmodule",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["new",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newtime",{"_index":483,"title":{},"body":{"controllers/TimeController.html":{}}}],["next",{"_index":395,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"miscellaneous/functions.html":{}}}],["node",{"_index":663,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["notfoundexception(null,'oauth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["npm",{"_index":665,"title":{},"body":{"index.html":{}}}],["null",{"_index":430,"title":{},"body":{"classes/Time.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["oauth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth.token(request",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["oauth2",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"dependencies.html":{}}}],["oauth2server",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"miscellaneous/variables.html":{}}}],["oauth2server.request(req",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["oauth2server.response(res",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["oauthaccesstoken",{"_index":167,"title":{"classes/OAuthAccessToken.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"coverage.html":{}}}],["oauthclient",{"_index":162,"title":{"classes/OAuthClient.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"coverage.html":{}}}],["oauthclient.model",{"_index":342,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["oautherror",{"_index":381,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["oautherrorfilter",{"_index":370,"title":{"classes/OAuthErrorFilter.html":{}},"body":{"classes/OAuthErrorFilter.html":{},"coverage.html":{}}}],["oautherrors",{"_index":372,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["object",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":399,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["ok",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["one",{"_index":453,"title":{},"body":{"controllers/TimeController.html":{}}}],["operations",{"_index":659,"title":{},"body":{"index.html":{}}}],["optional",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options.interface",{"_index":246,"title":{},"body":{"classes/ConfigService.html":{}}}],["order",{"_index":518,"title":{},"body":{"injectables/TimeService.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["out/:timerid",{"_index":445,"title":{},"body":{"controllers/TimeController.html":{}}}],["overview",{"_index":692,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":607,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":664,"title":{},"body":{"index.html":{}}}],["page",{"_index":674,"title":{},"body":{"index.html":{}}}],["param",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parseint(this.getvalue('postgres_port",{"_index":268,"title":{},"body":{"classes/ConfigService.html":{}}}],["particular",{"_index":504,"title":{},"body":{"injectables/TimeService.html":{}}}],["password",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["passwordplain",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"classes/User.html":{}}}],["passwordplain(value",{"_index":546,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":310,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["pg",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":407,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["port",{"_index":267,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["post('/clock",{"_index":437,"title":{},"body":{"controllers/TimeController.html":{}}}],["post('sign",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["postgres",{"_index":264,"title":{},"body":{"classes/ConfigService.html":{}}}],["postgres_auto_load_models",{"_index":284,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_database",{"_index":283,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_host",{"_index":279,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":282,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":280,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_syncronize",{"_index":285,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["postgres_username",{"_index":281,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TimeController.html":{}}}],["primarykey",{"_index":359,"title":{},"body":{"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["private",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":680,"title":{},"body":{"index.html":{}}}],["progress",{"_index":570,"title":{},"body":{"injectables/UsersService.html":{}}}],["project",{"_index":650,"title":{},"body":{"index.html":{}}}],["promise",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":207,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":221,"title":{},"body":{"classes/ConfigService.html":{},"classes/OAuthClient.html":{}}}],["pw",{"_index":534,"title":{},"body":{"classes/User.html":{}}}],["rc.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["redirecturi",{"_index":353,"title":{},"body":{"classes/OAuthClient.html":{}}}],["reflect",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["refresh_token",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":320,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["refreshtokenexpires",{"_index":321,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["refreshtokenlifetime",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registered",{"_index":346,"title":{},"body":{"classes/OAuthClient.html":{}}}],["represents",{"_index":316,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["req",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"miscellaneous/functions.html":{}}}],["request.url",{"_index":311,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["requestmethod",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["requestmethod.delete",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["require('dotenv').config",{"_index":247,"title":{},"body":{"classes/ConfigService.html":{}}}],["require('moment",{"_index":457,"title":{},"body":{"controllers/TimeController.html":{}}}],["requireclientauthentication",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":574,"title":{},"body":{"injectables/UsersService.html":{}}}],["res",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"miscellaneous/functions.html":{}}}],["res.locals.token.user.id",{"_index":461,"title":{},"body":{"controllers/TimeController.html":{}}}],["res.send(data",{"_index":463,"title":{},"body":{"controllers/TimeController.html":{}}}],["res.status(200).send",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["res.status(200).send(data",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["res.status(200).send({success",{"_index":477,"title":{},"body":{"controllers/TimeController.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"miscellaneous/functions.html":{}}}],["responseformatinterceptor",{"_index":386,"title":{"injectables/ResponseFormatInterceptor.html":{}},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["responses",{"_index":391,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["rest",{"_index":655,"title":{},"body":{"index.html":{}}}],["result",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":565,"title":{},"body":{"injectables/UsersService.html":{}}}],["return",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":672,"title":{},"body":{"index.html":{}}}],["running",{"_index":675,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":401,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":403,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["sequelize",{"_index":216,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["sequelize.op.ne",{"_index":517,"title":{},"body":{"injectables/TimeService.html":{}}}],["sequelize.uuidv4",{"_index":364,"title":{},"body":{"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["sequelizemodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([time",{"_index":494,"title":{},"body":{"modules/TimeModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forroot",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["sequelizemoduleoptions",{"_index":236,"title":{},"body":{"classes/ConfigService.html":{}}}],["server",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"dependencies.html":{}}}],["set",{"_index":545,"title":{},"body":{"classes/User.html":{}}}],["setpasswordplain(value",{"_index":535,"title":{},"body":{"classes/User.html":{}}}],["shared/middleware/auth",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"modules/TimeModule.html":{}}}],["shared/models/oauthaccesstoken.model",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["shared/models/oauthclient.model",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["shared/models/times.model",{"_index":493,"title":{},"body":{"modules/TimeModule.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["shared/models/user.model",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["shared/services/base.service",{"_index":513,"title":{},"body":{"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["shared/services/config.service",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["sign",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["signin",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["signin(req",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{}}}],["signout",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{}}}],["signout(@res",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["signout(res",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@body",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["signup(signupparameters",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupparameters",{"_index":78,"title":{"classes/SignUpParameters.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"coverage.html":{}}}],["simple",{"_index":654,"title":{},"body":{"index.html":{}}}],["single",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["sorted",{"_index":508,"title":{},"body":{"injectables/TimeService.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../auth.ts",{"_index":641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.service.ts",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../oauth.ts",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/lib/oauth.ts",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:20",{"_index":412,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:23",{"_index":413,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:27",{"_index":415,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:30",{"_index":410,"title":{},"body":{"classes/SignUpParameters.html":{}}}],["src/modules/auth/auth.controller.ts:45",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:79",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:94",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.module.ts:18",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:24",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:36",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:8",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/time/time.controller.ts",{"_index":432,"title":{},"body":{"controllers/TimeController.html":{},"coverage.html":{}}}],["src/modules/time/time.controller.ts:16",{"_index":450,"title":{},"body":{"controllers/TimeController.html":{}}}],["src/modules/time/time.controller.ts:28",{"_index":439,"title":{},"body":{"controllers/TimeController.html":{}}}],["src/modules/time/time.controller.ts:51",{"_index":446,"title":{},"body":{"controllers/TimeController.html":{}}}],["src/modules/time/time.module.ts",{"_index":489,"title":{},"body":{"modules/TimeModule.html":{}}}],["src/modules/time/time.module.ts:15",{"_index":490,"title":{},"body":{"modules/TimeModule.html":{}}}],["src/modules/time/time.service.ts",{"_index":496,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["src/modules/time/time.service.ts:20",{"_index":507,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/modules/time/time.service.ts:38",{"_index":503,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/modules/time/time.service.ts:8",{"_index":500,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/modules/user/user.module.ts",{"_index":555,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":559,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:20",{"_index":564,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:32",{"_index":568,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/user/user.service.ts:8",{"_index":562,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/shared/filters/httpexceptionfilter.ts",{"_index":287,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/filters/httpexceptionfilter.ts:9",{"_index":296,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/shared/filters/oautherrorfilter.ts",{"_index":371,"title":{},"body":{"classes/OAuthErrorFilter.html":{},"coverage.html":{}}}],["src/shared/filters/oautherrorfilter.ts:11",{"_index":382,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["src/shared/interceptors/responseformatinterceptor.ts",{"_index":387,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/responseformatinterceptor.ts:10",{"_index":397,"title":{},"body":{"injectables/ResponseFormatInterceptor.html":{}}}],["src/shared/middleware/auth.ts",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts",{"_index":315,"title":{},"body":{"classes/OAuthAccessToken.html":{},"coverage.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:14",{"_index":325,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:20",{"_index":332,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:25",{"_index":327,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:30",{"_index":333,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:34",{"_index":335,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:37",{"_index":329,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:40",{"_index":334,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthaccesstoken.model.ts:43",{"_index":331,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["src/shared/models/oauthclient.model.ts",{"_index":345,"title":{},"body":{"classes/OAuthClient.html":{},"coverage.html":{}}}],["src/shared/models/oauthclient.model.ts:16",{"_index":361,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:21",{"_index":358,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:27",{"_index":355,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:34",{"_index":357,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/oauthclient.model.ts:37",{"_index":363,"title":{},"body":{"classes/OAuthClient.html":{}}}],["src/shared/models/times.model.ts",{"_index":417,"title":{},"body":{"classes/Time.html":{},"coverage.html":{}}}],["src/shared/models/times.model.ts:15",{"_index":424,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:21",{"_index":426,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:28",{"_index":423,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:33",{"_index":425,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:36",{"_index":428,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/times.model.ts:39",{"_index":427,"title":{},"body":{"classes/Time.html":{}}}],["src/shared/models/user.model.ts",{"_index":521,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/shared/models/user.model.ts:17",{"_index":528,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:23",{"_index":525,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:32",{"_index":527,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:34",{"_index":533,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:44",{"_index":536,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:54",{"_index":529,"title":{},"body":{"classes/User.html":{}}}],["src/shared/models/user.model.ts:57",{"_index":531,"title":{},"body":{"classes/User.html":{}}}],["src/shared/services/auth.service.ts",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["src/shared/services/base.service.ts",{"_index":206,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["src/shared/services/base.service.ts:15",{"_index":214,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/services/base.service.ts:5",{"_index":212,"title":{},"body":{"classes/BaseService.html":{}}}],["src/shared/services/config.service.ts",{"_index":220,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/services/config.service.ts:18",{"_index":232,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:23",{"_index":234,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:27",{"_index":243,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:32",{"_index":235,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:5",{"_index":229,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/shared/services/config.service.ts:9",{"_index":239,"title":{},"body":{"classes/ConfigService.html":{}}}],["stack",{"_index":313,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["start",{"_index":440,"title":{},"body":{"controllers/TimeController.html":{},"index.html":{}}}],["start:dev",{"_index":679,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":681,"title":{},"body":{"index.html":{}}}],["started",{"_index":648,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":421,"title":{},"body":{"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{}}}],["statements",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":302,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["status(exception.code",{"_index":384,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["status(status",{"_index":305,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":307,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{}}}],["string",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["student",{"_index":649,"title":{},"body":{"index.html":{}}}],["success",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["successful",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["such",{"_index":482,"title":{},"body":{"controllers/TimeController.html":{}}}],["super(timemodel",{"_index":515,"title":{},"body":{"injectables/TimeService.html":{}}}],["super(usermodel",{"_index":571,"title":{},"body":{"injectables/UsersService.html":{}}}],["support",{"_index":689,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":690,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":276,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":338,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":684,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":687,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":686,"title":{},"body":{"index.html":{}}}],["tests",{"_index":683,"title":{},"body":{"index.html":{}}}],["this.authservice.getclient(clientid",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.authservice.logout(res.locals.token.accesstoken",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.clientmodel.findone",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.env[key",{"_index":251,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getdatavalue('password",{"_index":543,"title":{},"body":{"classes/User.html":{}}}],["this.getvalue('mode",{"_index":260,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('port",{"_index":258,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_auto_load_models",{"_index":275,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_database",{"_index":273,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_host",{"_index":266,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_password",{"_index":271,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_syncronize",{"_index":277,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('postgres_username",{"_index":270,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":257,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.model",{"_index":218,"title":{},"body":{"classes/BaseService.html":{}}}],["this.model.create(data",{"_index":219,"title":{},"body":{"classes/BaseService.html":{}}}],["this.setdatavalue('password",{"_index":549,"title":{},"body":{"classes/User.html":{}}}],["this.timemodel.findall",{"_index":516,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timemodel.findone",{"_index":520,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timesservice.create",{"_index":473,"title":{},"body":{"controllers/TimeController.html":{}}}],["this.timesservice.gettimefromid(timerid",{"_index":479,"title":{},"body":{"controllers/TimeController.html":{}}}],["this.timesservice.gettimesfromuseriddescending(userid",{"_index":462,"title":{},"body":{"controllers/TimeController.html":{}}}],["this.tokenmodel.destroy",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findone",{"_index":572,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create({email",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.userservice.getuserbyemail(email",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["this.userservice.getuserbyemailwithstarttime(res.locals.token.user.email",{"_index":468,"title":{},"body":{"controllers/TimeController.html":{}}}],["throw",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"classes/User.html":{}}}],["throwonmissing",{"_index":238,"title":{},"body":{"classes/ConfigService.html":{}}}],["time",{"_index":416,"title":{"classes/Time.html":{}},"body":{"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["time.controller",{"_index":491,"title":{},"body":{"modules/TimeModule.html":{}}}],["time.id",{"_index":485,"title":{},"body":{"controllers/TimeController.html":{}}}],["time.service",{"_index":455,"title":{},"body":{"controllers/TimeController.html":{},"modules/TimeModule.html":{}}}],["time.update({endtime",{"_index":484,"title":{},"body":{"controllers/TimeController.html":{}}}],["timecontroller",{"_index":431,"title":{"controllers/TimeController.html":{}},"body":{"controllers/TimeController.html":{},"modules/TimeModule.html":{},"coverage.html":{}}}],["timemodel",{"_index":501,"title":{},"body":{"injectables/TimeService.html":{}}}],["timemodule",{"_index":13,"title":{"modules/TimeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TimeModule.html":{},"modules.html":{},"overview.html":{}}}],["timer",{"_index":505,"title":{},"body":{"injectables/TimeService.html":{}}}],["timerid",{"_index":448,"title":{},"body":{"controllers/TimeController.html":{}}}],["times",{"_index":522,"title":{},"body":{"classes/User.html":{}}}],["times.model",{"_index":539,"title":{},"body":{"classes/User.html":{}}}],["timeservice",{"_index":454,"title":{"injectables/TimeService.html":{}},"body":{"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"coverage.html":{},"overview.html":{}}}],["timesservice",{"_index":459,"title":{},"body":{"controllers/TimeController.html":{}}}],["timestamp",{"_index":308,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{}}}],["token",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["tokenmodel",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["tracked",{"_index":451,"title":{},"body":{"controllers/TimeController.html":{}}}],["transformer",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"classes/OAuthClient.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":474,"title":{},"body":{"controllers/TimeController.html":{}}}],["type",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/OAuthErrorFilter.html":{},"injectables/ResponseFormatInterceptor.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"modules/TimeModule.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeof",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["types/bcrypt",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["types/oauth2",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["types/validator",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":217,"title":{},"body":{"classes/BaseService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{},"dependencies.html":{}}}],["undefined",{"_index":250,"title":{},"body":{"classes/ConfigService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthClient.html":{},"classes/Time.html":{},"classes/User.html":{}}}],["undefined})@index",{"_index":324,"title":{},"body":{"classes/OAuthAccessToken.html":{}}}],["unique",{"_index":360,"title":{},"body":{"classes/OAuthClient.html":{}}}],["unit",{"_index":682,"title":{},"body":{"index.html":{}}}],["up",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{}}}],["update",{"_index":379,"title":{},"body":{"classes/OAuthErrorFilter.html":{}}}],["used",{"_index":441,"title":{},"body":{"controllers/TimeController.html":{}}}],["user",{"_index":64,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/OAuthAccessToken.html":{},"classes/OAuthErrorFilter.html":{},"classes/SignUpParameters.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["user.addtime(time",{"_index":476,"title":{},"body":{"controllers/TimeController.html":{}}}],["user.controller",{"_index":557,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.model",{"_index":341,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{}}}],["user.service",{"_index":558,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.times.length",{"_index":469,"title":{},"body":{"controllers/TimeController.html":{}}}],["user/user.module",{"_index":492,"title":{},"body":{"modules/TimeModule.html":{}}}],["user/user.service",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["userid",{"_index":322,"title":{},"body":{"classes/OAuthAccessToken.html":{},"classes/Time.html":{},"controllers/TimeController.html":{},"injectables/TimeService.html":{}}}],["usermodel",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":269,"title":{},"body":{"classes/ConfigService.html":{}}}],["users",{"_index":660,"title":{},"body":{"index.html":{}}}],["userscontroller",{"_index":556,"title":{},"body":{"modules/UsersModule.html":{}}}],["userservice",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{}}}],["usersmodule",{"_index":14,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":86,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignUpParameters.html":{},"controllers/TimeController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":526,"title":{},"body":{"classes/User.html":{}}}],["validation",{"_index":376,"title":{},"body":{"classes/OAuthErrorFilter.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignUpParameters.html":{},"dependencies.html":{}}}],["value",{"_index":241,"title":{},"body":{"classes/ConfigService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":356,"title":{},"body":{"classes/OAuthClient.html":{}}}],["variable",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":696,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/OAuthErrorFilter.html":{},"modules/TimeModule.html":{},"classes/User.html":{}}}],["watch",{"_index":678,"title":{},"body":{"index.html":{}}}],["web_application",{"_index":368,"title":{},"body":{"classes/OAuthClient.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TimeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nTimeModule\n\nTimeModule\n\nAppModule -->\n\nTimeModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            TimeModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UsersModule } from './modules/user/user.module';\nimport { TimeModule } from './modules/time/time.module';\n\nimport { configService } from './shared/services/config.service';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tSequelizeModule.forRoot({\n\t\t\t...configService.getPostgresConfig(),\n\t\t}),\n\t\tUsersModule,\n\t\tTimeModule,\n\t],\n\tcontrollers: [AppController],\n\tproviders: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-in')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:79\n                \n            \n\n\n            \n                \n                    Sign in a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHttp request object\n\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHttp response object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('sign-out')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:94\n                \n            \n\n\n            \n                \n                    Sign out a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHttp response object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpParameters: SignUpParameters)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-up')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:45\n                \n            \n\n\n            \n                \n                    Sign up a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpParameters\n                                    \n                                                SignUpParameters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tBadRequestException,\n\tBody,\n\tController,\n\tDelete,\n\tNotFoundException,\n\tPost, Req, Res,\n} from '@nestjs/common';\nimport { UsersService } from '../user/user.service';\nimport { AuthService } from './auth.service';\nimport { IsEmail, IsNotEmpty, Length } from 'class-validator';\nimport * as OAuth2Server from 'oauth2-server';\nimport { oauth } from '../../lib/oauth';\n\nimport { Request, Response } from 'express';\n\nclass SignUpParameters{\n\t@IsEmail()\n\t@IsNotEmpty()\n\temail: string;\n\n\t@IsNotEmpty()\n\tfullName: string;\n\n\t@IsNotEmpty()\n\t@Length(8, 255, {message: \"Password must bet at lest 8 characters long\"})\n\tpassword: string;\n\n\t@IsNotEmpty()\n\tclientId: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n\tconstructor(\n\t\tprivate readonly userService: UsersService,\n\t\tprivate readonly authService: AuthService\n\t){}\n\n\t/**\n\t * Sign up a user.\n\t * @param signUpParameters\n\t */\n\t@Post('sign-up')\n\tasync signUp(@Body() signUpParameters: SignUpParameters){\n\t\tconst {\n\t\t\temail,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,\n\t\t} = signUpParameters;\n\t\tconsole.log(email,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,)\n\t\tconst client = await this.authService.getClient(clientId);\n\n\t\tif(!client){\n\t\t\tthrow new NotFoundException(null,'OAuth client not found')\n\t\t}\n\t\tconst user = await this.userService.getUserByEmail(email);\n\t\tif(user){\n\t\t\tthrow new BadRequestException(null, 'User already exists')\n\t\t}\n\t\tawait this.userService.create({email, fullName, passwordPlain: password});\n\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\tmessage: 'ok'\n\t\t};\n\t}\n\n\t/**\n\t * Sign in a user\n\t * @param req - Http request object\n\t * @param res - Http response object\n\t */\n\t@Post('sign-in')\n\tasync signIn(@Req() req: Request, @Res() res: Response){\n\n\t\tconst request = new OAuth2Server.Request(req);\n\t\tconst response = new OAuth2Server.Response(res);\n\n\t\tconst data = await oauth.token(request, response);\n\n\t\tres.status(200).send(data);\n\t}\n\n\t/**\n\t * Sign out a user\n\t * @param res - Http response object\n\t */\n\t@Delete('sign-out')\n\tasync signOut(@Res() res: Response){\n\t\tawait this.authService.logout(res.locals.token.accessToken);\n\t\tres.status(200).send()\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { OAuthClient } from '../../shared/models/oAuthClient.model';\nimport { authenticateUser } from '../../shared/middleware/auth';\nimport { AuthService } from './auth.service';\nimport { User } from '../../shared/models/user.model';\nimport { UsersService } from '../user/user.service';\nimport { OAuthAccessToken } from '../../shared/models/oAuthAccessToken.model';\n\n\n@Module({\n\timports: [SequelizeModule.forFeature([User, OAuthClient, OAuthAccessToken])],\n\tproviders: [UsersService, AuthService],\n\tcontrollers: [AuthController]\n})\nexport class AuthModule implements NestModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer\n\t\t\t.apply(authenticateUser).forRoutes({path: '/auth/sign-out', method: RequestMethod.DELETE});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getClient\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel, clientModel, tokenModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClient(clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n                    Find single client.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid of the client\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n                    Logout user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntoken to be destroyed with the logout\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from '../../shared/models/user.model';\nimport { OAuthClient } from '../../shared/models/oAuthClient.model';\nimport { OAuthAccessToken } from '../../shared/models/oAuthAccessToken.model';\n\n@Injectable()\nexport class AuthService {\n\tconstructor(\n\t\t@InjectModel(User)\n\t\tprivate userModel: typeof User,\n\t\t@InjectModel(OAuthClient)\n\t\tprivate clientModel: typeof OAuthClient,\n\t\t@InjectModel(OAuthAccessToken)\n\t\tprivate tokenModel: typeof OAuthAccessToken,\n\t) {\n\n\t}\n\n\t/**\n\t * Find single client.\n\t * @param clientId - id of the client\n\t */\n\tasync getClient(clientId: string): Promise{\n\t\treturn this.clientModel.findOne({\n\t\t\twhere: {\n\t\t\t\tid: clientId,\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Logout user\n\t * @param token - token to be destroyed with the logout\n\t */\n\tasync logout(token: string): Promise{\n\t\tconst deletedTokens = await this.tokenModel.destroy({\n\t\t\twhere: {\n\t\t\t\taccessToken: token,\n\t\t\t},\n\t\t});\n\t\treturn deletedTokens \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/base.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelCtor)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/base.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    ModelCtor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelCtor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/base.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:15\n                \n            \n\n\n            \n                \n                    Create instance of the model\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModelCtor } from 'sequelize-typescript';\n\nexport class BaseService {\n\n\tprivate model: ModelCtor;\n\n\tconstructor(model : ModelCtor){\n\t\tthis.model = model;\n\t}\n\n\t/**\n\t * Create instance of the model\n\t * @param data\n\t */\n\tasync create(data){\n\t\treturn this.model.create(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getPort\n                            \n                            \n                                    Public\n                                getPostgresConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                            \n                                    Public\n                                isProduction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ensureValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPort()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPostgresConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPostgresConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SequelizeModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isProduction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduction()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SequelizeModuleOptions } from '@nestjs/sequelize/dist/interfaces/sequelize-options.interface';\n\nrequire('dotenv').config();\n\nclass ConfigService {\n\n\tconstructor(private env: { [k: string]: string | undefined }) { }\n\n\tprivate getValue(key: string, throwOnMissing = true): string {\n\t\tconst value = this.env[key];\n\t\tif (typeof value === 'undefined' && throwOnMissing) {\n\t\t\tthrow new Error(`config error - missing env.${key}`);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic ensureValues(keys: string[]) {\n\t\tkeys.forEach(k => this.getValue(k, true));\n\t\treturn this;\n\t}\n\n\tpublic getPort() {\n\t\treturn this.getValue('PORT', true);\n\t}\n\n\tpublic isProduction() {\n\t\tconst mode = this.getValue('MODE', false);\n\t\treturn mode != 'DEV';\n\t}\n\n\tpublic getPostgresConfig(): SequelizeModuleOptions {\n\t\treturn {\n\t\t\tdialect: 'postgres',\n\t\t\thost: this.getValue('POSTGRES_HOST'),\n\t\t\tport: parseInt(this.getValue('POSTGRES_PORT')),\n\t\t\tusername: this.getValue('POSTGRES_USERNAME'),\n\t\t\tpassword: this.getValue('POSTGRES_PASSWORD'),\n\t\t\tdatabase: this.getValue('POSTGRES_DATABASE'),\n\t\t\tautoLoadModels: this.getValue('POSTGRES_AUTO_LOAD_MODELS') === 'true',\n\t\t\tsynchronize: this.getValue('POSTGRES_SYNCRONIZE') === 'true',\n\t\t};\n\t}\n\n}\n\nconst configService = new ConfigService(process.env)\n\t.ensureValues([\n\t\t'POSTGRES_HOST',\n\t\t'POSTGRES_PORT',\n\t\t'POSTGRES_USERNAME',\n\t\t'POSTGRES_PASSWORD',\n\t\t'POSTGRES_DATABASE',\n\t\t'POSTGRES_AUTO_LOAD_MODELS',\n\t\t'POSTGRES_SYNCRONIZE',\n\t]);\n\nexport { configService };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/HttpExceptionFilter.ts\n        \n\n            \n                Description\n            \n            \n                Exception filter for HttpError\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/HttpExceptionFilter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n/**\n * Exception filter for HttpError\n */\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n\tcatch(exception: HttpException, host: ArgumentsHost) {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response: Response = ctx.getResponse();\n\t\tconst request: Request = ctx.getRequest();\n\t\tconst status = exception.getStatus();\n\t\tconsole.log(exception)\n\t\tresponse\n\t\t\t.status(status)\n\t\t\t.json({\n\t\t\t\tstatusCode: status,\n\t\t\t\ttimestamp: new Date().toISOString(),\n\t\t\t\tpath: request.url,\n\t\t\t\tmessage: exception.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthAccessToken.html":{"url":"classes/OAuthAccessToken.html","title":"class - OAuthAccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthAccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/oAuthAccessToken.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents AccessToken that belongs to single user.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                accessTokenExpiresAt\n                            \n                            \n                                clientId\n                            \n                            \n                                oAuthClient\n                            \n                            \n                                refreshToken\n                            \n                            \n                                refreshTokenExpires\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessTokenExpiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ForeignKey(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oAuthClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OAuthClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshTokenExpires\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ForeignKey(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthAccessToken.model.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, Index, Model, Table, BelongsTo, ForeignKey } from 'sequelize-typescript';\nimport { User } from './user.model';\nimport { OAuthClient } from './oAuthClient.model';\n\n/**\n * Represents AccessToken that belongs to single user.\n */\n@Table\nexport class OAuthAccessToken extends Model {\n\t@Column({\n\t\ttype: DataType.STRING,\n\t})\n\t@Index\n\taccessToken: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t})\n\t@Index\n\trefreshToken: string;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t})\n\taccessTokenExpiresAt: Date;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t})\n\trefreshTokenExpires: Date;\n\n\n\t@ForeignKey(()=> User)\n\tuserId: string;\n\n\t@ForeignKey(()=> OAuthClient)\n\tclientId: string;\n\n\t@BelongsTo(() => User)\n\tuser: User;\n\n\t@BelongsTo(() => OAuthClient)\n\toAuthClient: OAuthClient;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthClient.html":{"url":"classes/OAuthClient.html","title":"class - OAuthClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/oAuthClient.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents OAuthClient\nOnly registered clients can have access to the API.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientSecret\n                            \n                            \n                                clientType\n                            \n                            \n                                grants\n                            \n                            \n                                id\n                            \n                            \n                                redirectUri\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientSecret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, values: undefined, defaultValue: 'public'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, defaultValue: undefined, primaryKey: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column(DataType.STRING)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/oAuthClient.model.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, DataType, Model, Table } from 'sequelize-typescript';\nimport * as sequelize from 'sequelize';\n\n/**\n * Represents OAuthClient\n * Only registered clients can have access to the API.\n */\n@Table\nexport class OAuthClient extends Model {\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t\tprimaryKey: true,\n\t\tunique: true,\n\t})\n\tid: string;\n\n\t@Column({\n\t\ttype: DataType.ARRAY(DataType.STRING)\n\t})\n\tgrants: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t})\n\tclientSecret: Date;\n\n\t@Column({\n\t\ttype: DataType.ENUM,\n\t\tvalues: ['public', 'confidential', 'web_application', 'native_application'],\n\t\tdefaultValue: 'public',\n\t})\n\tclientType: Date;\n\n\t@Column(DataType.STRING)\n\tredirectUri: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorFilter.html":{"url":"classes/OAuthErrorFilter.html","title":"class - OAuthErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/OAuthErrorFilter.ts\n        \n\n            \n                Description\n            \n            \n                Exception filter for OAuthErrors.\nThese errors can happen during user validation, creation, deletion or during update of the user information.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: OAuthError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/OAuthErrorFilter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            OAuthError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { OAuthError } from 'oauth2-server'\n\n/**\n * Exception filter for OAuthErrors.\n * These errors can happen during user validation, creation, deletion or during update of the user information.\n */\n@Catch(OAuthError)\nexport class OAuthErrorFilter implements ExceptionFilter {\n\tcatch(exception: OAuthError, host: ArgumentsHost) {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response: Response = ctx.getResponse();\n\t\tconst request: Request = ctx.getRequest();\n\t\tresponse\n\t\t\t.status(exception.code)\n\t\t\t.json({\n\t\t\t\tstatusCode: exception.code,\n\t\t\t\ttimestamp: new Date().toISOString(),\n\t\t\t\tpath: request.url,\n\t\t\t\tmessage: exception.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseFormatInterceptor.html":{"url":"injectables/ResponseFormatInterceptor.html","title":"injectable - ResponseFormatInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResponseFormatInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/ResponseFormatInterceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptor for consistent formatting of the responses.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interceptors/ResponseFormatInterceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Interceptor for consistent formatting of the responses.\n */\n@Injectable()\nexport class ResponseFormatInterceptor implements NestInterceptor {\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tconsole.log('Before...', context.getHandler());\n\n\t\treturn next\n\t\t\t.handle()\n\t\t\t.pipe(\n\t\t\t\tmap((data) => {\n\t\t\t\t\treturn ({\n\t\t\t\t\t\tstatusCode: context.switchToHttp().getResponse().statusCode,\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpParameters.html":{"url":"classes/SignUpParameters.html","title":"class - SignUpParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Length(8, 255, {message: 'Password must bet at lest 8 characters long'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.controller.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tBadRequestException,\n\tBody,\n\tController,\n\tDelete,\n\tNotFoundException,\n\tPost, Req, Res,\n} from '@nestjs/common';\nimport { UsersService } from '../user/user.service';\nimport { AuthService } from './auth.service';\nimport { IsEmail, IsNotEmpty, Length } from 'class-validator';\nimport * as OAuth2Server from 'oauth2-server';\nimport { oauth } from '../../lib/oauth';\n\nimport { Request, Response } from 'express';\n\nclass SignUpParameters{\n\t@IsEmail()\n\t@IsNotEmpty()\n\temail: string;\n\n\t@IsNotEmpty()\n\tfullName: string;\n\n\t@IsNotEmpty()\n\t@Length(8, 255, {message: \"Password must bet at lest 8 characters long\"})\n\tpassword: string;\n\n\t@IsNotEmpty()\n\tclientId: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n\tconstructor(\n\t\tprivate readonly userService: UsersService,\n\t\tprivate readonly authService: AuthService\n\t){}\n\n\t/**\n\t * Sign up a user.\n\t * @param signUpParameters\n\t */\n\t@Post('sign-up')\n\tasync signUp(@Body() signUpParameters: SignUpParameters){\n\t\tconst {\n\t\t\temail,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,\n\t\t} = signUpParameters;\n\t\tconsole.log(email,\n\t\t\tfullName,\n\t\t\tpassword,\n\t\t\tclientId,)\n\t\tconst client = await this.authService.getClient(clientId);\n\n\t\tif(!client){\n\t\t\tthrow new NotFoundException(null,'OAuth client not found')\n\t\t}\n\t\tconst user = await this.userService.getUserByEmail(email);\n\t\tif(user){\n\t\t\tthrow new BadRequestException(null, 'User already exists')\n\t\t}\n\t\tawait this.userService.create({email, fullName, passwordPlain: password});\n\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\tmessage: 'ok'\n\t\t};\n\t}\n\n\t/**\n\t * Sign in a user\n\t * @param req - Http request object\n\t * @param res - Http response object\n\t */\n\t@Post('sign-in')\n\tasync signIn(@Req() req: Request, @Res() res: Response){\n\n\t\tconst request = new OAuth2Server.Request(req);\n\t\tconst response = new OAuth2Server.Response(res);\n\n\t\tconst data = await oauth.token(request, response);\n\n\t\tres.status(200).send(data);\n\t}\n\n\t/**\n\t * Sign out a user\n\t * @param res - Http response object\n\t */\n\t@Delete('sign-out')\n\tasync signOut(@Res() res: Response){\n\t\tawait this.authService.logout(res.locals.token.accessToken);\n\t\tres.status(200).send()\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Time.html":{"url":"classes/Time.html","title":"class - Time","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Time\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/times.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents single activity that belongs to a single user.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endTime\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                startTime\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: true, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, primaryKey: true, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ForeignKey(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/times.model.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BelongsTo, Column, DataType, ForeignKey, Model, Table } from 'sequelize-typescript';\nimport * as sequelize from 'sequelize';\nimport { User } from './user.model';\n\n/**\n * Represents single activity that belongs to a single user.\n */\n@Table\nexport class Time extends Model {\n\t@Column({\n\t\ttype: DataType.UUID,\n\t\tprimaryKey: true,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t})\n\tid: string;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t\tallowNull: false,\n\t})\n\tstartTime: Date;\n\n\t@Column({\n\t\ttype: DataType.DATE,\n\t\tallowNull: true,\n\t\tdefaultValue: null,\n\t})\n\tendTime: Date;\n\n\t@Column({\n\n\t})\n\tlabel: string;\n\n\t@ForeignKey(()=> User)\n\tuserId: string;\n\n\t@BelongsTo(() => User)\n\tuser: User;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TimeController.html":{"url":"controllers/TimeController.html","title":"controller - TimeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TimeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/time/time.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                time\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clockIn\n                            \n                            \n                                    Async\n                                clockOut\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clockIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clockIn(label: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/clock-in/:label')\n                \n            \n\n            \n                \n                    Defined in src/modules/time/time.controller.ts:28\n                \n            \n\n\n            \n                \n                    Start single activity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlabel or the name of the activity\n\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nresponse object used to get current authenticated user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clockOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clockOut(timerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/clock-out/:timerId')\n                \n            \n\n            \n                \n                    Defined in src/modules/time/time.controller.ts:51\n                \n            \n\n\n            \n                \n                    Finish single activity from the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid of the activity to finish\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n            \n                \n                    Defined in src/modules/time/time.controller.ts:16\n                \n            \n\n\n            \n                \n                    Get all tracked activities from one user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nresponse object used to get current authenticated user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Post, Res } from '@nestjs/common';\nimport { UsersService } from '../user/user.service';\nimport { TimeService } from './time.service';\nimport { Response } from 'express';\nimport moment = require('moment');\n\n@Controller('time')\nexport class TimeController {\n\tconstructor(private readonly userService: UsersService, private readonly timesService: TimeService){}\n\n\t/**\n\t * Get all tracked activities from one user\n\t * @param res - response object used to get current authenticated user\n\t */\n\t@Get('/')\n\tasync getAll(@Res() res: Response){\n\t\tconst userId = res.locals.token.user.id;\n\t\tconst data = await this.timesService.getTimesFromUserIdDescending(userId);\n\t\treturn res.send(data);\n\t}\n\n\t/**\n\t * Start single activity\n\t * @param label - label or the name of the activity\n\t * @param res - response object used to get current authenticated user\n\t */\n\t@Post('/clock-in/:label')\n\tasync clockIn(@Param('label') label: string, @Res() res: Response){\n\t\tconst startTime = moment().format('YYYY-MM-DDTHH:mm:ss.SSSZ');\n\t\tconst user = await this.userService.getUserByEmailWithStartTime(res.locals.token.user.email);\n\n\t\tif (user.times.length > 0) {\n\t\t\tthrow new BadRequestException(\"User is already clocked in\");\n\n\t\t}\n\t\tconst time = await this.timesService.create({\n\t\t\tstartTime: startTime,\n\t\t\tlabel: label,\n\t\t});\n\n\t\t// @ts-ignore\n\t\tawait user.addTime(time);\n\t\tres.status(200).send({success: true, time})\n\t}\n\n\t/**\n\t * Finish single activity from the user\n\t * @param timerId - id of the activity to finish\n\t */\n\t@Post('/clock-out/:timerId')\n\tasync clockOut(@Param('timerId') timerId: string){\n\t\tconst endTime = moment().format('YYYY-MM-DDTHH:mm:ss.SSSZ');\n\t\tconst time = await this.timesService.getTimeFromId(timerId);\n\n\t\tif(!time){\n\t\t\tthrow new BadRequestException('There is no such activity')\n\t\t}\n\t\tconst newTime = await time.update({endTime: endTime}, {where: {id: timerId}});\n\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\ttimerId: time.id,\n\t\t\tnewTime\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TimeModule.html":{"url":"modules/TimeModule.html","title":"module - TimeModule","body":"\n                   \n\n\n\n\n    Modules\n    TimeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TimeModule\n\n\n\ncluster_TimeModule_imports\n\n\n\ncluster_TimeModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nTimeModule\n\nTimeModule\n\nTimeModule -->\n\nUsersModule->TimeModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nTimeModule -->\n\nTimeService->TimeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/time/time.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TimeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TimeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/time/time.module.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { TimeService } from './time.service';\nimport { TimeController } from './time.controller';\nimport { UsersModule } from '../user/user.module';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Time } from '../../shared/models/times.model';\nimport { authenticateUser } from '../../shared/middleware/auth';\n\n@Module({\n\timports: [UsersModule, SequelizeModule.forFeature([Time])],\n\tproviders: [TimeService],\n\tcontrollers: [TimeController]\n})\nexport class TimeModule  implements NestModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer\n\t\t\t.apply(authenticateUser).forRoutes(TimeController)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/time/time.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTimeFromId\n                            \n                            \n                                    Async\n                                getTimesFromUserIdDescending\n                            \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timeModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/time/time.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTimeFromId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeFromId(id)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/time/time.service.ts:38\n                \n            \n\n\n            \n                \n                    Find particular activity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid of the timer\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTimesFromUserIdDescending\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimesFromUserIdDescending(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/time/time.service.ts:20\n                \n            \n\n\n            \n                \n                    Find all user activities sorted by descending\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid of the user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n                    Create instance of the model\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelCtor\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:5\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Time } from '../../shared/models/times.model';\nimport * as sequelize from 'sequelize';\nimport { BaseService } from '../../shared/services/base.service';\n\n@Injectable()\nexport class TimeService extends BaseService{\n\tconstructor(\n\t\t@InjectModel(Time)\n\t\tprivate timeModel: typeof Time,\n\t){\n\t\tsuper(timeModel)\n\t}\n\n\t/**\n\t * Find all user activities sorted by descending\n\t * @param userId - id of the user\n\t */\n\tasync getTimesFromUserIdDescending(userId: string) : Promise {\n\t\treturn this.timeModel.findAll({\n\t\t\twhere: {\n\t\t\t\tuserId: userId,\n\t\t\t\tendTime: {\n\t\t\t\t\t[sequelize.Op.ne] : null,\n\t\t\t\t}\n\t\t\t},\n\t\t\torder: [\n\t\t\t\t['startTime', 'DESC']\n\t\t\t]\n\t\t})\n\t}\n\n\t/**\n\t * Find particular activity\n\t * @param id - id of the timer\n\t */\n\tasync getTimeFromId(id) : Promise{\n\t\treturn this.timeModel.findOne({\n\t\t\twhere: {\n\t\t\t\tid: id,\n\t\t\t}\n\t\t})\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents single user.\n\n            \n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValidPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    passwordPlain\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: false, validate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, primaryKey: true, defaultValue: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Time[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @HasMany(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/user.model.ts:57\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidPassword\n                        \n                        \n                    \n                \n            \n            \n                \nisValidPassword(pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/user.model.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        passwordPlain\n                    \n                \n\n\n                \n                    \n                        setpasswordPlain(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/user.model.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Column, DataType, HasMany, Model, Table } from 'sequelize-typescript';\nimport * as bcrypt from 'bcrypt';\nimport * as sequelize from 'sequelize';\nimport { Time } from './times.model';\nimport { BadRequestException } from '@nestjs/common';\n\n/**\n * Represents single user.\n */\n@Table\nexport class User extends Model {\n\t@Column({\n\t\ttype: DataType.UUID,\n\t\tprimaryKey: true,\n\t\tdefaultValue: sequelize.UUIDV4,\n\t})\n\tid: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tallowNull: false,\n\t})\n\temail: string;\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t\tallowNull: false,\n\t\tvalidate: {\n\t\t\tlen: [1, 255],\n\t\t}\n\t})\n\tfullName: boolean;\n\n\tisValidPassword(pw: string): boolean{\n\t\treturn bcrypt.compareSync(pw, this.getDataValue('password'));\n\t}\n\n\t@Column({\n\t\ttype: DataType.VIRTUAL,\n\t\tvalidate: {\n\t\t\tlen: [8, 255],\n\t\t},\n\t})\n\tset passwordPlain(value: string){\n\t\tif(value.length  255){\n\t\t\tthrow new BadRequestException(\"Password must be at least 8 characters long\");\n\t\t}\n\t\tthis.setDataValue('password', bcrypt.hashSync(value, bcrypt.genSaltSync(10)));\n\t}\n\n\t@Column({\n\t\ttype: DataType.STRING,\n\t})\n\tpassword: string;\n\n\t@HasMany(()=> Time)\n\ttimes: Time[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from '../../shared/models/user.model';\nimport { UsersController } from './user.controller';\nimport { UsersService } from './user.service';\n\n@Module({\n\timports: [SequelizeModule.forFeature([User])],\n\tproviders: [UsersService],\n\tcontrollers: [UsersController],\n\texports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserByEmailWithStartTime\n                            \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:20\n                \n            \n\n\n            \n                \n                    Retrieve single user by his email address\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail of the user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByEmailWithStartTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmailWithStartTime(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:32\n                \n            \n\n\n            \n                \n                    Retrieve single user by his email with his activity that is currently in progress\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail of the user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n                    Create instance of the model\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelCtor\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:5\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from '../../shared/models/user.model';\nimport { Time } from '../../shared/models/times.model';\nimport { BaseService } from '../../shared/services/base.service';\n\n@Injectable()\nexport class UsersService extends BaseService{\n\tconstructor(\n\t\t@InjectModel(User)\n\t\tprivate userModel: typeof User,\n\t) {\n\t\tsuper(userModel);\n\t}\n\n\t/**\n\t * Retrieve single user by his email address\n\t * @param email - email of the user\n\t */\n\tasync getUserByEmail(email : string): Promise{\n\t\treturn this.userModel.findOne({\n\t\t\twhere: {\n\t\t\t\temail: email\n\t\t\t},\n\t\t})\n\t}\n\n\t/**\n\t * Retrieve single user by his email with his activity that is currently in progress\n\t * @param email - email of the user\n\t */\n\tasync getUserByEmailWithStartTime(email : string) : Promise {\n\t\treturn this.userModel.findOne({\n\t\t\twhere: {\n\t\t\t\temail: email\n\t\t\t},\n\t\t\tinclude:[{\n\t\t\t\tmodel: Time,\n\t\t\t\twhere: {\n\t\t\t\t\tendTime: null,\n\t\t\t\t},\n\t\t\t\trequired: false,\n\t\t\t}]\n\t\t})\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/oauth.ts\n            \n            variable\n            oauth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            class\n            SignUpParameters\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/modules/time/time.controller.ts\n            \n            controller\n            TimeController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/time/time.service.ts\n            \n            injectable\n            TimeService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/shared/filters/HttpExceptionFilter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/shared/filters/OAuthErrorFilter.ts\n            \n            class\n            OAuthErrorFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/ResponseFormatInterceptor.ts\n            \n            injectable\n            ResponseFormatInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/shared/middleware/auth.ts\n            \n            function\n            authenticateUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/shared/models/oAuthAccessToken.model.ts\n            \n            class\n            OAuthAccessToken\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/shared/models/oAuthClient.model.ts\n            \n            class\n            OAuthClient\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/shared/models/times.model.ts\n            \n            class\n            Time\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/shared/models/user.model.ts\n            \n            class\n            User\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/shared/services/auth.service.ts\n            \n            class\n            AuthService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/shared/services/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/services/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.6\n        \n            @nestjs/core : ^7.0.6\n        \n            @nestjs/platform-express : ^7.0.6\n        \n            @nestjs/sequelize : ^0.1.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/oauth2-server : ^3.0.12\n        \n            @types/validator : ^12.0.1\n        \n            bcrypt : ^4.0.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.0-rc.0\n        \n            dotenv : ^8.2.0\n        \n            moment : ^2.24.0\n        \n            mysql2 : ^2.1.0\n        \n            oauth2-server : latest\n        \n            pg : ^7.18.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            sequelize : ^5.21.5\n        \n            sequelize-typescript : ^1.1.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authenticateUser   (src/.../auth.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/middleware/auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            authenticateUser\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticateUser(req, res, next)\n                \n            \n\n\n\n\n            \n                \n                    Middleware for token validation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nhttp request object\n\n\n                                    \n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nhttp response object\n\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext function in middleware to call after successful token validation\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n#Student project\nAuthor: Danilo Gačević\nDescription\nSimple REST API that implements user authentication along with CRUD operations for users activities. \nInstallation\n\nInstall node packages. $ npm install\nCreate .env file with all necessary fields. Check config.service.ts for help.\n\nDocumentation\nGenerate documentation\n$ npm run docDocumentation at page\nRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TimeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_TimeModule\n\n\n\ncluster_TimeModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nTimeModule\n\nTimeModule\n\nAppModule -->\n\nTimeModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTimeModule -->\n\nUsersModule->TimeModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nTimeModule -->\n\nTimeService->TimeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (src/.../config.service.ts)\n                        \n                        \n                            oauth   (src/.../oauth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/services/config.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ConfigService(process.env)\n\t.ensureValues([\n\t\t'POSTGRES_HOST',\n\t\t'POSTGRES_PORT',\n\t\t'POSTGRES_USERNAME',\n\t\t'POSTGRES_PASSWORD',\n\t\t'POSTGRES_DATABASE',\n\t\t'POSTGRES_AUTO_LOAD_MODELS',\n\t\t'POSTGRES_SYNCRONIZE',\n\t])\n                        \n                    \n\n\n            \n        \n\n    src/lib/oauth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            oauth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OAuth2Server({\n\trefreshTokenLifetime: 60 * 3600,\n\tmodel: new AuthService(),\n\taccessTokenLifetime: 60 * 3600,\n\tallowBearerTokensInQueryString: true,\n\trequireClientAuthentication: {\n\t\tpassword: false,\n\t\trefresh_token: false,\n\t}\n})\n                        \n                    \n\n                \n                    \n                        Instance of the OAuth2Server.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
